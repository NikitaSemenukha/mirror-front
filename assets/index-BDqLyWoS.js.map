{"version":3,"file":"index-BDqLyWoS.js","sources":["../../src/shared/theme/themeStore.ts","../../src/shared/theme/ThemeProvider.tsx","../../src/i18n.ts","../../src/api/index.ts","../../src/api/login/loginUser.ts","../../src/api/register/register.ts","../../src/shared/validation/validation.ts","../../src/components/AuthForm/AuthForm.tsx","../../src/pages/auth-page/auth-page.tsx","../../src/components/LanguageSwitcher/LanguageSwitcher.tsx","../../src/api/notifications/createNotification.ts","../../src/api/notifications/getNotifications.ts","../../src/api/notifications/markAsRead.ts","../../src/api/notifications/deleteNotification.ts","../../src/components/Notifications/Notification.tsx","../../src/components/Navbar/Navbar.tsx","../../src/api/coaches/getCoaches.ts","../../src/api/coaches/getCoachByEmail.ts","../../src/api/coaches/getStudentDetails.ts","../../src/api/coaches/getStudentIdsByCoach.ts","../../src/api/coaches/removeStudentFromCoach.ts","../../src/components/CoachesBlock/CoachesBlock.tsx","../../src/pages/home-page/home-page.tsx","../../src/pages/about-page/about-page.tsx","../../src/pages/achievements-page/achievements-page.tsx","../../src/components/PrivateRoute/PrivateRoute.tsx","../../src/api/profile/getProfile.ts","../../src/api/profile/updateProfile.ts","../../src/api/profile/getAvatarUrl.ts","../../src/api/profile/getPlayerStats.ts","../../src/components/Profile/EditProfileForm.tsx","../../src/pages/profile-page/profile-page.tsx","../../src/shared/components/CustomTable/CustomTable.tsx","../../src/pages/users-page/users-page.tsx","../../src/api/schedule/getScheduleByStudent.ts","../../src/api/schedule/createScheduleEvent.ts","../../src/api/schedule/updateScheduleEvent.ts","../../src/api/schedule/deleteScheduleEvent.ts","../../src/components/Schedule/EditScheduleModal.tsx","../../src/pages/students-page/students-page.tsx","../../src/features/Chess/engine/ChessGameEngine.tsx","../../src/features/Chess/hooks/useChessGame.ts","../../src/features/Chess/components/ChessBoard.tsx","../../src/features/Chess/components/MoveHistory.tsx","../../src/features/Chess/components/AnalysisPanel.tsx","../../src/features/Chess/pages/AnalysisPage.tsx","../../src/components/ChessGame/ChessBoard.tsx","../../src/components/PuzzleEditor/PuzzleEditor.tsx","../../src/api/email-verify/checkVerificationStatus.ts","../../src/api/email-verify/resendVerificationEmail.ts","../../src/pages/verify-email-page/verify-email-page.tsx","../../src/api/requests/fetchRequests.ts","../../src/api/requests/handleRequest.ts","../../src/api/requests/createRequest.ts","../../src/pages/coaches-page/coaches-page.tsx","../../src/api/homework/sendHomework.ts","../../src/api/homework/reviewHomework.ts","../../src/api/homework/getHomeworksForReview.ts","../../src/api/homework/getHomeworkScreenshot.ts","../../src/pages/inbox-page/inbox-page.tsx","../../src/components/StudentSchedule/StudentsSchedule.tsx","../../src/pages/students-shedule-page/students-shedule-page.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { create } from 'zustand';\n\ninterface ThemeState {\n  theme: 'light' | 'dark';\n  toggleTheme: () => void;\n}\n\nexport const useThemeStore = create<ThemeState>((set) => ({\n  theme: (localStorage.getItem('theme') as 'light' | 'dark') || 'light',\n  toggleTheme: () =>\n    set((state) => {\n      const newTheme = state.theme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', newTheme);\n      return { theme: newTheme };\n    }),\n}));\n","import { createContext, useContext, useEffect } from 'react';\nimport { useThemeStore } from './themeStore';\n\n// 1. Создаем контекст\nconst ThemeContext = createContext({ toggleTheme: () => {}, mode: 'light' });\n\n// 2. Провайдер темы\nexport const ThemeProvider = ({ children }: { children: React.ReactNode }) => {\n  const { theme, toggleTheme } = useThemeStore();\n\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ toggleTheme, mode: theme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// 3. Кастомный хук для использования темы\nexport const useTheme = () => useContext(ThemeContext);\n","// src/i18n.ts\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport HttpBackend from 'i18next-http-backend';\n\ni18n\n  .use(HttpBackend)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json', \n    },\n    lng: 'en',\n    fallbackLng: 'en', \n    interpolation: {\n      escapeValue: false,\n    },\n    debug: true\n  });\n\nexport default i18n;\n","import axios, { AxiosResponse, AxiosError } from 'axios';\nimport { notification } from 'antd';\nimport i18n from '@/i18n'; \n\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000/api'; \n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  withCredentials: true, \n});\n\nconst reduceMessage = (arr: string[]) => arr?.reduce((acc, item) => (acc += item), '');\nconst getIssueMessage = (error: AxiosError<any>, description: string) => {\n  notification.error({\n    message: 'Ошибка', \n    description,\n  });\n  return Promise.reject(error);\n};\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    const language = i18n.language; \n    if (language) {\n      config.headers['Accept-Language'] = language;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxiosInstance.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError<any>) => {\n\n    if (error.response?.status === 401) {\n      notification.error({\n        message: 'Сессия истекла',\n        description: error.response?.data?.message || 'Пожалуйста, войдите в систему снова.',\n      });\n      \n      localStorage.removeItem('token');\n      localStorage.removeItem('user'); \n      \n      window.location.href = '/login'; \n\n      return new Promise(() => {});\n    }\n    \n    if (error.response?.status !== 504) { \n      if (error.message === 'Network Error' || !error.response) {\n        return getIssueMessage(error, 'Ошибка сети или сервер недоступен. Попробуйте позже.');\n      }\n      const data = error.response?.data;\n      let message = typeof data === 'string' ? data : '';\n      if (Array.isArray(data)) { return getIssueMessage(error, reduceMessage(data)); }\n      if (Array.isArray(data?.data)) { return getIssueMessage(error, reduceMessage(data.data)); }\n      if (data?.detail) { return getIssueMessage(error, data.detail); }\n      if (data instanceof Object) {\n        const description = data.msg || Object.keys(data).reduce(\n          (acc, key) => (acc += `${key}: ${data[key]?.[0] || data[key]} `),''\n        );\n        return getIssueMessage(error, description);\n      }\n      notification.error({\n        message: 'Ошибка',\n        description: message || error.message,\n      });\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;","import axiosInstance from '@/api'; \nimport { LoginCredentials, LoginResponse } from '@/types/Auth'; \n\nexport const loginUser = async (credentials: LoginCredentials): Promise<LoginResponse> => {\n  const response = await axiosInstance.post('/auth/login', credentials);\n  \n  return response.data;\n};","import axiosInstance from '@/api'; \nimport { RegistrationData } from '@/types/Auth';\n\nexport const registerUser = async (data: RegistrationData) => {\n  try {\n    const response = await axiosInstance.post('/auth/register', data);\n    return response.data;\n  } catch (error) {\n    console.error('Registration failed', error);\n    throw error;\n  }\n};\n","import { Rule } from 'antd/es/form';\nimport { TFunction } from 'i18next'; \n\nexport const nameValidation = (t: TFunction): Rule[] => [\n  { required: true, message: t('validation.required') },\n  {\n    validator: (_, value) =>\n      value && value.length >= 2\n        ? Promise.resolve()\n        : Promise.reject(new Error(t('validation.name_length'))), \n  },\n];\n\nexport const loginValidation = (t: TFunction): Rule[] => [\n  { required: true, message: t('validation.required') },\n  { type: 'email', message: t('validation.invalid_email') },\n];\n\nexport const passwordValidation = (t: TFunction): Rule[] => [\n  { required: true, message: t('validation.required') },\n  { min: 6, message: t('validation.password_length') }, \n];","import React from 'react';\nimport Form, { FormProps } from 'antd/es/form';\nimport Input from 'antd/es/input';\nimport Button from 'antd/es/button';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { notification } from 'antd';\nimport Typography from 'antd/es/typography';\nimport { FaChessKing } from 'react-icons/fa';\n\nimport { loginUser } from '@/api/login';\nimport { registerUser } from '@/api/register/register';\nimport { LoginCredentials, RegistrationData } from '@/types/Auth';\nimport { loginValidation, passwordValidation, nameValidation } from '@/shared/validation';\n\nimport './styles.scss';\n\ninterface AuthFormProps {\n  mode: 'login' | 'register';\n}\n\nexport const AuthForm: React.FC<AuthFormProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const isLoginMode = mode === 'login';\n\n  const handleLogin: FormProps<LoginCredentials>['onFinish'] = async (values) => {\n    try {\n      const { token, user } = await loginUser(values);\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      navigate('/profile', { replace: true });\n      notification.success({\n        message: t('auth.success.login_title'),\n        description: t('auth.success.welcome_back', { name: user.firstName }),\n      });\n    } catch (error) {\n      notification.error({\n        message: t('auth.errors.login'),\n        description: t('auth.errors.invalid_credentials'),\n      });\n    }\n  };\n\nconst handleRegister: FormProps<RegistrationData>['onFinish'] = async (values) => {\n  try {\n    const response = await registerUser(values);\n\n    const registeredEmail = response.email;\n\n    navigate('/verify-email', {\n      replace: true, \n      state: {\n        email: registeredEmail,\n        firstName: values.firstName,\n        lastName: values.lastName,\n      },\n    });\n\n    notification.success({\n      message: t('register.success.title'),\n      description: t('register.success.description'),\n    });\n\n  } catch (error) {\n    notification.error({\n      message: t('register.error.title'),\n      description: (error as any).response?.data?.msg || t('register.error.description'),\n    });\n  }\n};\n\n  return (\n    <div className=\"auth-form-container\">\n      <div className=\"auth-header\" onClick={() => navigate('/')}>\n        <FaChessKing className=\"auth-header__icon\" />\n        <Typography.Title level={4} className=\"auth-header__brand\">\n          {t('common.brand')} \n        </Typography.Title>\n      </div>\n      <Typography.Title level={3} className=\"auth-header__title\">\n        {isLoginMode ? t('auth.sign_in') : t('register.title')}\n      </Typography.Title>\n      \n      {/* --- Тело формы --- */}\n      <Form\n        name={mode}\n        onFinish={isLoginMode ? handleLogin : handleRegister}\n        layout=\"vertical\"\n        className=\"auth-form-body\"\n        size=\"large\"\n        autoComplete=\"off\"\n      >\n        {!isLoginMode && (\n          <>\n            <Form.Item label={<span className=\"auth-form-label\">{t('register.name')}</span>} name=\"firstName\" rules={nameValidation(t)}>\n              <Input placeholder={t('register.placeholder.name')} />\n            </Form.Item>\n            <Form.Item label={<span className=\"auth-form-label\">{t('register.lastName')}</span>} name=\"lastName\" rules={nameValidation(t)}>\n              <Input placeholder={t('register.placeholder.lastName')} />\n            </Form.Item>\n          </>\n        )}\n\n        <Form.Item label={<span className=\"auth-form-label\">{t('common.email')}</span>} name=\"email\" rules={loginValidation(t)}>\n          <Input placeholder={t('common.placeholder.email')} />\n        </Form.Item>\n\n        <Form.Item label={<span className=\"auth-form-label\">{t('common.password')}</span>} name=\"password\" rules={passwordValidation(t)}>\n          <Input.Password placeholder={t('common.placeholder.password')} />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"auth-form-button\" block>\n            {isLoginMode ? t('auth.sign_in') : t('register.submit')}\n          </Button>\n        </Form.Item>\n      </Form>\n      \n      {/* --- Подвал формы --- */}\n      <div className=\"auth-form-footer\">\n        {isLoginMode ? (\n          <>\n            {t('auth.no_account')}{' '}\n            <a className=\"auth-form-link\" onClick={() => navigate('/register')}>\n              {t('auth.sign_up')}\n            </a>\n          </>\n        ) : (\n          <>\n            {t('register.haveAccount')}{' '}\n            <a className=\"auth-form-link\" onClick={() => navigate('/login')}>\n              {t('register.login')}\n            </a>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { AuthForm } from '@/components/AuthForm';\nimport './styles.scss';\n\nexport const AuthPage: React.FC = () => {\n  const location = useLocation();\n\n  const mode = location.pathname.includes('register') ? 'register' : 'login';\n\n  return (\n    <div className=\"auth-page-wrapper\">\n      <AuthForm mode={mode} />\n    </div>\n  );\n};","import React from 'react';\nimport { Select, MenuItem, SelectChangeEvent } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\ninterface LanguageSwitcherProps {\n  className?: string;\n}\n\nexport const LanguageSwitcher: React.FC<LanguageSwitcherProps> = ({ className }) => {\n  const { i18n } = useTranslation();\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    const selectedLanguage = event.target.value as string;\n    i18n.changeLanguage(selectedLanguage);\n  };\n\n  return (\n    <Select\n      value={i18n.language}\n      onChange={handleChange}\n      size=\"small\"\n      className={className} \n      style={{ color: 'black', borderColor: 'black' }}\n    >\n      <MenuItem value=\"en\">EN</MenuItem>\n      <MenuItem value=\"pl\">PL</MenuItem>\n      <MenuItem value=\"uk\">UA</MenuItem>\n    </Select>\n  );\n};\n","import axiosInstance from '@/api'; \n\ninterface NotificationPayload {\n  recipient: string;\n  type: string;\n  content: string;\n  metadata?: { [key: string]: any };\n}\n\nexport const createNotification = async (data: NotificationPayload) => {\n    const response = await axiosInstance.post('/notifications', data);\n    return response.data;\n};","import axiosInstance from '@/api'; \n\nexport const getNotifications = async () => {\n  const response = await axiosInstance.get('/notifications');\n  return response.data;\n};\n","import axiosInstance from '@/api';\n\nexport const markAsRead = async (notificationId: string) => {\n  const response = await axiosInstance.patch('/notifications', {}, {\n    params: {\n      notification_id: notificationId\n    }\n  });\n  return response.data;\n};","import axiosInstance from '@/api';\n\nexport const deleteNotification = async (notificationId: string) => {\n  const response = await axiosInstance.delete('/notifications', {\n    params: {\n      notification_id: notificationId\n    }\n  });\n  return response.data;\n};","import React, { useEffect, useState } from 'react';\nimport {\n  IconButton,\n  Badge,\n  Menu,\n  MenuItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton as MuiIconButton,\n  Divider,\n  Box,\n  Typography\n} from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { getNotifications, markAsRead, deleteNotification } from '@/api/notifications';\n\ninterface Notification {\n  _id: string;\n  type: string;\n  content: string;\n  read: boolean;\n  createdAt: string;\n}\n\ninterface NotificationsProps {\n  navigateToRequests: () => void;\n}\n\nexport const Notifications: React.FC<NotificationsProps> = ({ navigateToRequests }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n  const open = Boolean(anchorEl);\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  const fetchNotifications = async () => {\n    try {\n      const data = await getNotifications();\n      setNotifications(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error('Ошибка при получении уведомлений:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchNotifications();\n    const interval = setInterval(fetchNotifications, 30000); // Обновляем каждые 30 секунд\n    return () => clearInterval(interval); // Очищаем интервал при размонтировании\n  }, []);\n\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n    // При открытии можно пометить видимые как прочитанные или просто обновить\n    fetchNotifications(); \n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // 👇 ИСПРАВЛЕНИЕ: Добавляем `event` в аргументы\n  const handleDeleteNotification = async (event: React.MouseEvent, notificationId: string) => {\n    event.stopPropagation(); // 👈 ГЛАВНОЕ ИСПРАВЛЕНИЕ! Останавливаем всплытие.\n    try {\n      await deleteNotification(notificationId);\n      // Оптимистичное обновление UI для мгновенной реакции\n      setNotifications(prev => prev.filter(n => n._id !== notificationId));\n    } catch (error) {\n      console.error('Ошибка при удалении уведомления:', error);\n    }\n  };\n\n  const handleNotificationClick = (notification: Notification) => {\n    // Помечаем как прочитанное, только если оно не было прочитано\n    if (!notification.read) {\n      markAsRead(notification._id);\n      // Оптимистичное обновление\n      setNotifications(prev => prev.map(n => n._id === notification._id ? { ...n, read: true } : n));\n    }\n\n    // Если это заявка, переходим во \"Входящие\"\n    if (notification.type === 'request' || notification.type === 'homework_submission') {\n      navigateToRequests();\n    }\n    \n    handleMenuClose();\n  };\n  \n  const handleViewAllClick = () => {\n    navigateToRequests();\n    handleMenuClose();\n  }\n\n  return (\n    <div>\n      <IconButton color=\"inherit\" onClick={handleMenuOpen}>\n        <Badge badgeContent={unreadCount} color=\"error\">\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleMenuClose}\n        PaperProps={{\n          style: {\n            maxHeight: 300,\n            width: '400px',\n          },\n        }}\n      >\n        <Box sx={{ p: 2, borderBottom: '1px solid #eee' }}>\n            <Typography variant=\"h6\">Уведомления</Typography>\n        </Box>\n        {notifications.length === 0 ? (\n          <MenuItem disabled>Уведомлений нет</MenuItem>\n        ) : (\n          notifications.map((notification) => (\n            <MenuItem\n              key={notification._id}\n              onClick={() => handleNotificationClick(notification)}\n              sx={{ \n                bgcolor: notification.read ? 'transparent' : 'action.hover',\n                whiteSpace: 'normal',\n                alignItems: 'flex-start'\n              }}\n            >\n              <ListItemText\n                primary={notification.content}\n                secondary={new Date(notification.createdAt).toLocaleString()}\n              />\n              <ListItemSecondaryAction>\n                {/* 👇 Передаем `event` в обработчик */}\n                <MuiIconButton\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                  onClick={(event) => handleDeleteNotification(event, notification._id)}\n                >\n                  <DeleteIcon fontSize=\"small\" />\n                </MuiIconButton>\n              </ListItemSecondaryAction>\n            </MenuItem>\n          ))\n        )}\n        <Divider />\n        <MenuItem onClick={handleViewAllClick}>\n            <ListItemText primary=\"Посмотреть все во 'Входящих'\" sx={{ textAlign: 'center' }} />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemText,\n  Divider,\n  Box,\n  Button,\n  ListItemIcon,\n} from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { LanguageSwitcher } from '../LanguageSwitcher/LanguageSwitcher';\nimport {\n  HomeOutlined,\n  InfoCircleOutlined,\n  TrophyOutlined,\n  TeamOutlined,\n  PlayCircleOutlined,\n  UserOutlined,\n  LogoutOutlined,\n  CloseOutlined,\n  RocketOutlined, \n} from '@ant-design/icons';\nimport './styles.scss';\nimport { Notifications } from '@/components/Notifications/Notification';\n\nexport const Navbar: React.FC = () => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const userString = localStorage.getItem('user');\n  let user = null;\n  try {\n    if (userString && userString !== 'undefined' && userString !== 'null') {\n      user = JSON.parse(userString);\n    }\n  } catch (error) {\n    console.error('Error parsing user from localStorage:', error);\n    user = null;\n  }\n\n  const token = localStorage.getItem('token');\n  const isAuthenticated = !!token && !!user;\n  const isAdmin = user?.roles?.includes('admin');\n  const isCoach = user?.roles?.includes('coach');\n  const isStudent = user?.roles?.includes('student');\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsDrawerOpen(false);\n    navigate('/login');\n  };\n\n  const handleGetStarted = () => {\n    setIsDrawerOpen(false);\n    navigate('/register');\n  };\n\n  const navigateToRequests = () => {\n    navigate('/inbox'); \n  };\n\n  const toggleDrawer = (open: boolean) => () => {\n    setIsDrawerOpen(open);\n  };\n\n  const handleMenuClick = (path: string) => {\n    setIsDrawerOpen(false);\n    navigate(path);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" className=\"navbar-appbar\">\n        <Toolbar className=\"navbar-toolbar\">\n          <Typography variant=\"h6\" className=\"navbar-title\" onClick={() => navigate('/')}>\n            {t('navbar.chessSchool')}\n          </Typography>\n          \n          <Box className=\"navbar-controls\">\n            {!isAuthenticated && (\n              <Box sx={{ display: { xs: 'none', md: 'flex' }, alignItems: 'center' }}>\n                <Button color=\"inherit\" onClick={() => navigate('/login')}>{t('navbar.login')}</Button>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => navigate('/register')} sx={{ ml: 1 }}>{t('navbar.register')}</Button>\n              </Box>\n            )}\n\n            {isAuthenticated && (\n              <Notifications navigateToRequests={navigateToRequests} />\n            )}\n\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              onClick={toggleDrawer(true)}\n              className=\"navbar-menu-button\"\n            >\n              <MenuIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      <Drawer anchor=\"right\" open={isDrawerOpen} onClose={toggleDrawer(false)}>\n        <Box className=\"navbar-drawer\">\n          <Box className=\"drawer-header\">\n            <IconButton onClick={toggleDrawer(false)} className=\"close-button\">\n              <CloseOutlined className=\"close-icon\" />\n            </IconButton>\n          </Box>\n          \n          <List className=\"menu-list\">\n            {/* Общие пункты меню */}\n            <ListItemButton onClick={() => handleMenuClick('/')} className=\"menu-item\">\n              <ListItemIcon><HomeOutlined /></ListItemIcon>\n              <ListItemText primary={t('navbar.home')} />\n            </ListItemButton>\n            <ListItemButton onClick={() => handleMenuClick('/about')} className=\"menu-item\">\n              <ListItemIcon><InfoCircleOutlined /></ListItemIcon>\n              <ListItemText primary={t('navbar.aboutUs')} />\n            </ListItemButton>\n            <ListItemButton onClick={() => handleMenuClick('/achievements')} className=\"menu-item\">\n              <ListItemIcon><TrophyOutlined /></ListItemIcon>\n              <ListItemText primary={t('navbar.achievements')} />\n            </ListItemButton>\n            <ListItemButton onClick={() => handleMenuClick('/coaches')} className=\"menu-item\">\n              <ListItemIcon><TeamOutlined /></ListItemIcon>\n              <ListItemText primary={t('navbar.coaches')} />\n            </ListItemButton>\n            \n            {/* 👇 ВОССТАНОВИЛ РАЗДЕЛИТЕЛИ МЕЖДУ СЕМАНТИЧЕСКИМИ БЛОКАМИ */}\n            {isAuthenticated && <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.12)' }} />}\n\n            {/* Меню для авторизованных пользователей */}\n            {isAuthenticated && (\n              <>\n                <ListItemButton onClick={() => handleMenuClick('/analysis')} className=\"menu-item\">\n                  <ListItemIcon><PlayCircleOutlined /></ListItemIcon>\n                  <ListItemText primary={t('navbar.chessGame')} />\n                </ListItemButton>\n                <ListItemButton onClick={() => handleMenuClick('/profile')} className=\"menu-item\">\n                  <ListItemIcon><UserOutlined /></ListItemIcon>\n                  <ListItemText primary={t('navbar.profile')} />\n                </ListItemButton>\n              </>\n            )}\n\n            {(isCoach || isAdmin || isStudent) && <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.12)' }} />}\n            \n            {/* Меню для ролей */}\n            {(isCoach || isAdmin) && (\n              <ListItemButton onClick={() => handleMenuClick('/students')} className=\"menu-item\">\n                <ListItemIcon><TeamOutlined /></ListItemIcon>\n                <ListItemText primary={t('navbar.students')} />\n              </ListItemButton>\n            )}\n            {(isCoach || isAdmin || isStudent) && (\n              <ListItemButton onClick={() => handleMenuClick('/students-shedule')} className=\"menu-item\">\n                <ListItemIcon><TeamOutlined /></ListItemIcon>\n                <ListItemText primary={t('navbar.students-shedule')} />\n              </ListItemButton>\n            )}\n            {isAdmin && (\n              <ListItemButton onClick={() => handleMenuClick('/users')} className=\"menu-item\">\n                <ListItemIcon><TeamOutlined /></ListItemIcon>\n                <ListItemText primary={t('navbar.users')} />\n              </ListItemButton>\n            )}\n          </List>\n\n          <Box className=\"drawer-bottom-actions\">\n            {isAuthenticated ? (\n              <Button onClick={handleLogout} className=\"logout-button\">\n                <LogoutOutlined />\n                {t('navbar.logout')}\n              </Button>\n            ) : (\n              <Button onClick={handleGetStarted} className=\"get-started-button\" variant=\"contained\" color=\"secondary\">\n                <RocketOutlined style={{ marginRight: '8px' }}/>\n                {t('navbar.getStarted')}\n              </Button>\n            )}\n\n            <LanguageSwitcher className=\"language-switcher\" />\n          </Box>\n        </Box>\n      </Drawer>\n    </>\n  );\n};","import axiosInstance from '@/api'; \n\nexport const getCoaches = async () => {\n  const response = await axiosInstance.get('/coaches');\n  return response.data;\n};","import axiosInstance from '@/api'; \n\nexport const getCoachesByEmail = async (emails: string[]) => {\n    const response = await axiosInstance.post('/auth/coaches-by-email', { emails });\n    return response.data;\n  };","import axiosInstance from '@/api';\nimport { Student } from '@/types/Student'; \n\nexport const getStudentDetails = async (coachEmail: string, studentId: string): Promise<Student | null> => {\n    const response = await axiosInstance.get('/trainer/student', {\n      params: { coachEmail, studentId },\n    });\n    return response.data;\n};\n","import axiosInstance from '@/api';\n\n\nexport const getStudentIdsByCoach = async (coachEmail: string): Promise<string[]> => {\n  const response = await axiosInstance.get('/trainer/students', {\n    params: { coachEmail }, \n  });\n  return response.data;\n};","import axiosInstance from '@/api';\n\nexport const removeStudentFromCoach = async (coachEmail: string, studentId: string): Promise<void> => {\n  await axiosInstance.delete('/trainer/remove-student', {\n    params: { coachEmail, studentId },\n  });\n};","import { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\nimport { useNavigate } from 'react-router-dom';\nimport StarIcon from \"@mui/icons-material/Star\";\nimport { useTranslation } from \"react-i18next\";\nimport { getCoachesByEmail } from \"@/api/coaches\";\nimport { Coach } from \"@/types/Coach\";\n\n\nexport const CoachesBlock = () => {\n      const { t } = useTranslation();\n      const navigate = useNavigate();\n      const [coaches, setCoaches] = useState<Coach[]>([]);\n\n      useEffect(() => {\n        const fetchCoaches = async () => {\n            const data = await getCoachesByEmail([\"ad3@example.com\", \"ad7@example.com\"]);\n            setCoaches(data);\n        };\n    \n        fetchCoaches();\n      }, []);\n\n    return (\n              <Box py={10} px={2} sx={{ backgroundColor: \"#111\" }}>\n                <Typography variant=\"h4\" fontWeight=\"bold\" textAlign=\"center\" mb={6}>\n                  {t(\"homePage.coaches.title\")}\n                </Typography>\n                <Grid container spacing={4} justifyContent=\"center\">\n                  {coaches.map((coach) => (\n                    <Grid item xs={12} sm={6} md={3} key={coach._id}>\n                      <Card\n                        sx={{\n                          backgroundColor: \"#1a1a1a\",\n                          color: \"white\",\n                          borderRadius: 3,\n                          boxShadow: 4,\n                          position: \"relative\",\n                          '&:hover .hoverAction': {\n                            opacity: 1,\n                          },\n                        }}\n                      >\n                        <CardMedia\n                          component=\"img\"\n                          height=\"200\"\n                          image={coach.photoUrl || \"/images/default-avatar.png\"}\n                          alt={`${coach.firstName} ${coach.lastName}`}\n                        />\n                        <CardContent>\n                          <Typography variant=\"h6\">\n                            {coach.firstName} {coach.lastName}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"gray\">\n                          </Typography>\n                          <Box mt={1}>\n                            {[...Array(5)].map((_, i) => (\n                              <StarIcon key={i} sx={{ color: \"#FFD700\", fontSize: 20 }} />\n                            ))}\n                          </Box>\n                        </CardContent>\n                        <Box\n                          className=\"hoverAction\"\n                          sx={{\n                            position: \"absolute\",\n                            bottom: 16,\n                            left: 0,\n                            right: 0,\n                            textAlign: \"center\",\n                            opacity: 0,\n                            transition: \"0.3s\",\n                          }}\n                        >\n                          <Button variant=\"contained\"   \n                          onClick={() => navigate(\"/coaches\", { state: { coach } })}\n                          sx={{ backgroundColor: \"#FFD700\", color: \"black\" }}>\n                            {t(\"homePage.coaches.selectCoach\")}\n                          </Button>\n                        </Box>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Box>\n    )\n}","import { Box, Typography, Button, Grid, Paper, Container, Divider } from \"@mui/material\";\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from \"react-i18next\";\nimport { CoachesBlock } from \"@/components/CoachesBlock/CoachesBlock\";\nimport SchoolIcon from '@mui/icons-material/School';\nimport GroupIcon from '@mui/icons-material/Group';\n\nexport const Home = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const currentYear = new Date().getFullYear();\n\n  // Data for sections to avoid repetition\n  const whyChessItems = [\n    { icon: \"🎯\", key: \"analytics\", descKey: \"descAnalytics\" },\n    { icon: \"🧠\", key: \"memory\", descKey: \"descMemory\" },\n    { icon: \"🏆\", key: \"spirit\", descKey: \"descSpirit\" },\n  ];\n\n  const howItWorksSteps = [\n    { num: \"1\", titleKey: \"step1Title\", descKey: \"step1Desc\" },\n    { num: \"2\", titleKey: \"step2Title\", descKey: \"step2Desc\" },\n    { num: \"3\", titleKey: \"step3Title\", descKey: \"step3Desc\" },\n  ];\n\n  const formatItems = [\n    { type: \"individual\", icon: <SchoolIcon sx={{ fontSize: 40, mb: 2, color: \"#FFD700\" }} />, descKey: \"descIndividual\", buttonKey: \"schedule\", path: \"/coaches\" },\n    { type: \"group\", icon: <GroupIcon sx={{ fontSize: 40, mb: 2, color: \"#FFD700\" }} />, descKey: \"descGroup\", buttonKey: \"learnMore\", path: \"/classes\" },\n  ];\n\n  return (\n    <Box sx={{ backgroundColor: \"#0e0e0e\", color: \"white\", fontFamily: \"'Inter', sans-serif\" }}>\n      {/* Hero Section */}\n      <Box\n        sx={{\n          backgroundImage: {\n            xs: 'url(\"/images/chess-cinematic-mb.jpg\")',\n            sm: 'url(\"/images/chess-cinematic-tablet.jpg\")',\n            lg: 'url(\"/images/chess-cinematic-lg.jpg\")',\n          },\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n          py: { xs: 10, md: 20 },\n          textAlign: \"center\",\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          px: 2,\n        }}\n      >\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h2\" component=\"h1\" fontWeight=\"bold\">{t(\"homePage.hero.title\")}</Typography>\n          <Typography variant=\"h5\" mt={2} sx={{ color: 'rgba(255, 255, 255, 0.9)' }}>{t(\"homePage.hero.subtitle\")}</Typography>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            onClick={() => navigate(\"/coaches\")}\n            sx={{\n              mt: 4,\n              px: 5,\n              py: 1.5,\n              borderRadius: \"30px\",\n              boxShadow: '0px 8px 20px rgba(255, 215, 0, 0.3)',\n              backgroundColor: \"#FFD700\",\n              color: \"black\",\n              fontWeight: \"bold\",\n              '&:hover': { backgroundColor: \"#FFC107\", transform: 'translateY(-2px)', boxShadow: '0px 10px 25px rgba(255, 215, 0, 0.4)' },\n              transition: 'all 0.3s ease',\n            }}\n            startIcon={<span style={{ fontSize: '1.5rem' }}>♟️</span>}\n          >\n            {t(\"homePage.hero.start\")}\n          </Button>\n        </Container>\n      </Box>\n\n      {/* Why Chess Section */}\n      <Container maxWidth=\"lg\" sx={{ py: 10 }}>\n        <Typography variant=\"h3\" component=\"h2\" fontWeight=\"bold\" textAlign=\"center\" mb={8}>\n          {t(\"homePage.why.title\")}\n        </Typography>\n        <Grid container spacing={4} justifyContent=\"center\">\n          {whyChessItems.map(({ icon, key, descKey }) => (\n            <Grid item xs={12} sm={6} md={4} key={key}>\n              <Paper\n                elevation={6}\n                sx={{\n                  p: 4,\n                  textAlign: \"center\",\n                  borderRadius: 4,\n                  backgroundColor: \"rgba(255,255,255,0.05)\",\n                  backdropFilter: \"blur(10px)\",\n                  transition: \"all 0.3s ease\",\n                  color: \"white\",\n                  height: '100%',\n                  '&:hover': {\n                    transform: \"translateY(-10px)\",\n                    backgroundColor: \"rgba(255,255,255,0.1)\",\n                  },\n                }}\n              >\n                <Box fontSize=\"3.5rem\">{icon}</Box>\n                <Typography variant=\"h5\" component=\"h3\" mt={2} fontWeight=\"bold\">\n                  {t(`homePage.why.${key}`)}\n                </Typography>\n                <Typography mt={1.5} sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                  {t(`homePage.why.${descKey}`)}\n                </Typography>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      \n      {/* Coaches Block Section */}\n      <Box sx={{ py: 5 }}>\n         <CoachesBlock />\n      </Box>\n      \n      {/* How It Works Section */}\n      <Box sx={{ py: 10, backgroundColor: '#121212' }}>\n        <Container maxWidth=\"lg\">\n            <Typography variant=\"h3\" component=\"h2\" fontWeight=\"bold\" textAlign=\"center\" mb={8}>\n              {t(\"homePage.howItWorks.title\")}\n            </Typography>\n            <Grid container spacing={5}>\n              {howItWorksSteps.map(({ num, titleKey, descKey }) => (\n                <Grid item xs={12} md={4} key={num}>\n                  <Box sx={{ textAlign: { xs: 'center', md: 'left' } }}>\n                    <Typography variant=\"h1\" component=\"div\" fontWeight=\"bold\" sx={{ color: '#FFD700', opacity: 0.5 }}>\n                      {num}\n                    </Typography>\n                    <Typography variant=\"h5\" component=\"h3\" fontWeight=\"bold\" mt={1}>\n                      {t(`homePage.howItWorks.${titleKey}`)}\n                    </Typography>\n                    <Typography mt={1.5} sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\n                      {t(`homePage.howItWorks.${descKey}`)}\n                    </Typography>\n                  </Box>\n                </Grid>\n              ))}\n            </Grid>\n        </Container>\n      </Box>\n      \n      {/* Formats Section */}\n      <Container maxWidth=\"lg\" sx={{ py: 10 }}>\n        <Typography variant=\"h3\" component=\"h2\" fontWeight=\"bold\" textAlign=\"center\" mb={8}>\n          {t(\"homePage.formats.title\")}\n        </Typography>\n        <Grid container spacing={4} justifyContent=\"center\">\n          {formatItems.map(({ type, icon, descKey, buttonKey, path }) => (\n            <Grid item xs={12} md={5} key={type}>\n              <Paper\n                elevation={6}\n                sx={{\n                  p: 4,\n                  backgroundColor: \"#1c1c1c\",\n                  color: \"white\",\n                  borderRadius: 4,\n                  textAlign: \"center\",\n                  transition: 'background-color 0.3s ease',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  height: '100%',\n                  '&:hover': { backgroundColor: \"#2a2a2a\" },\n                }}\n              >\n                {icon}\n                <Typography variant=\"h5\" component=\"h3\" fontWeight=\"bold\">\n                  {t(`homePage.formats.${type}`)}\n                </Typography>\n                <Typography mt={1.5} sx={{ color: 'rgba(255, 255, 255, 0.7)', flexGrow: 1 }}>\n                  {t(`homePage.formats.${descKey}`)}\n                </Typography>\n                <Button \n                  variant=\"outlined\" \n                  onClick={() => navigate(path)}\n                  sx={{ \n                    mt: 3, \n                    color: \"#FFD700\", \n                    borderColor: '#FFD700', \n                    borderRadius: '20px',\n                    '&:hover': { borderColor: '#FFC107', backgroundColor: 'rgba(255, 215, 0, 0.1)' }\n                  }}\n                >\n                  {t(`homePage.formats.${buttonKey}`)} →\n                </Button>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n\n      {/* Footer */}\n      <Box component=\"footer\" py={6} px={2} sx={{ backgroundColor: \"#0b0b0b\", color: \"gray\" }}>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={5}>\n            <Grid item xs={12} sm={4}>\n              <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ color: 'white' }}>{t(\"homePage.footer.name\")}</Typography>\n              <Typography variant=\"body2\" sx={{ mt: 1, color: 'rgba(255,255,255,0.5)' }}>{t(\"homePage.footer.desc\")}</Typography>\n            </Grid>\n            <Grid item xs={6} sm={2}>\n               <Typography fontWeight=\"bold\" sx={{ color: 'white' }}>{t(\"homePage.footer.company\")}</Typography>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.about\")}</Button>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.blog\")}</Button>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.coaches\")}</Button>\n            </Grid>\n             <Grid item xs={6} sm={2}>\n               <Typography fontWeight=\"bold\" sx={{ color: 'white' }}>{t(\"homePage.footer.resources\")}</Typography>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.faq\")}</Button>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.contact\")}</Button>\n            </Grid>\n             <Grid item xs={6} sm={2}>\n               <Typography fontWeight=\"bold\" sx={{ color: 'white' }}>{t(\"homePage.footer.legal\")}</Typography>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.privacy\")}</Button>\n               <Button size=\"small\" sx={{ color: \"gray\", display: 'block', p: '6px 0' }}>{t(\"homePage.footer.terms\")}</Button>\n            </Grid>\n          </Grid>\n          <Divider sx={{ my: 4, borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n          <Typography variant=\"body2\" textAlign=\"center\" sx={{ color: 'rgba(255,255,255,0.4)' }}>\n            {t(\"homePage.footer.copyright\", { year: currentYear })}\n          </Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n};","import React, { useEffect, useState, useMemo } from 'react';\nimport { Box, Container, Typography, Grid, Paper, Button, Stack, Divider } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\n\n// Иконки\n// import SchoolIcon from '@mui/icons-material/School';\n// import GroupIcon from '@mui/icons-material/Group';\n// import EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport TrackChangesIcon from '@mui/icons-material/TrackChanges';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\n\n// Импорт CSS для анимации (убедитесь, что путь правильный)\nimport './styles.scss';\n\n// Типизация для удобства\ninterface Testimonial { name: string; quote: string; }\ninterface CoachTeaser { name: string; quote: string; }\ninterface WhyUsCard { icon: string; title: string; description: string; }\ninterface HowItWorksStep { step: string; desc: string; }\n\nexport const About: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  // Используем useMemo для безопасного получения и типизации данных из i18next\n  const phrases = useMemo(\n    () => (t('aboutPage.phrases', { returnObjects: true }) as string[]) || [],\n    [t]\n  );\n  \n  const testimonials = useMemo(\n    () => (t('aboutPage.testimonials.reviews', { returnObjects: true }) as Testimonial[]) || [],\n    [t]\n  );\n\n  const coaches = useMemo(\n    () => (t('aboutPage.ourCoaches.coaches', { returnObjects: true }) as CoachTeaser[]) || [],\n    [t]\n  );\n\n  const whyUsCards = useMemo(\n    () => (t('aboutPage.whyUs.cards', { returnObjects: true }) as WhyUsCard[]) || [],\n    [t]\n  );\n  \n  const howItWorksSteps = useMemo(\n    () => (t('aboutPage.howItWorks.steps', { returnObjects: true }) as HowItWorksStep[]) || [],\n    [t]\n  );\n  \n  const missionPoints = useMemo(\n    () => (t('aboutPage.mission.points', { returnObjects: true }) as string[]) || [],\n    [t]\n  );\n\n\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentTestimonialIndex, setCurrentTestimonialIndex] = useState(0);\n\n  useEffect(() => {\n    // Эта проверка важна, чтобы избежать ошибок, если данные еще не загрузились\n    if (phrases.length === 0 || testimonials.length === 0) return;\n\n    const phraseInterval = setInterval(() => {\n      setCurrentPhraseIndex((prev) => (prev + 1) % phrases.length);\n    }, 4000);\n    const testimonialInterval = setInterval(() => {\n      setCurrentTestimonialIndex((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    \n    return () => {\n      clearInterval(phraseInterval);\n      clearInterval(testimonialInterval);\n    };\n  }, [phrases.length, testimonials.length]);\n\n  return (\n    <Box sx={{ bgcolor: '#0e0e0e', color: 'white' }}>\n      {/* Hero Section */}\n      <Box sx={{\n        position: 'relative',\n        py: { xs: 10, md: 15 },\n        textAlign: 'center',\n        backgroundImage: 'linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.8)), url(\"/images/chess-cinematic-lg.jpg\")',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundAttachment: 'fixed',\n      }}>\n        <Container maxWidth=\"md\">\n          <Typography variant=\"h2\" component=\"h1\" fontWeight=\"bold\" sx={{ textTransform: 'uppercase', letterSpacing: '2px' }}>\n            {t('aboutPage.mainTitle')}\n          </Typography>\n          <Box sx={{ height: '2.5em', my: 2 }}>\n            <SwitchTransition mode=\"out-in\">\n              <CSSTransition key={currentPhraseIndex} timeout={300} classNames=\"fade\">\n                <Typography variant=\"h5\" sx={{ color: '#FFD700', fontStyle: 'italic' }}>\n                  {phrases.length > 0 ? phrases[currentPhraseIndex] : ''}\n                </Typography>\n              </CSSTransition>\n            </SwitchTransition>\n          </Box>\n          <Stack direction={{ xs: 'column', sm: 'row' }} justifyContent=\"center\" spacing={2} mt={4}>\n            <Button variant=\"contained\" onClick={() => navigate('/register')} size=\"large\" sx={{ bgcolor: '#FFD700', color: 'black', borderRadius: '30px', px: 5, '&:hover': { bgcolor: '#FFC107' } }}>\n              {t('aboutPage.ctaStudent')}\n            </Button>\n            <Button variant=\"outlined\" onClick={() => navigate('/coaches')} size=\"large\" sx={{ color: 'white', borderColor: 'rgba(255,255,255,0.5)', borderRadius: '30px', px: 5, '&:hover': { borderColor: 'white', bgcolor: 'rgba(255,255,255,0.1)' } }}>\n              {t('aboutPage.ctaCoaches')}\n            </Button>\n          </Stack>\n        </Container>\n      </Box>\n\n      {/* Main Content */}\n      <Container maxWidth=\"lg\" sx={{ py: 8 }}>\n\n        {/* Mission Section */}\n        <Box sx={{ textAlign: 'center', my: 8 }}>\n          <Stack direction=\"row\" spacing={2} justifyContent=\"center\" alignItems=\"center\" sx={{ color: '#FFD700', mb: 1 }}>\n            <TrackChangesIcon fontSize=\"large\" />\n            <Typography variant=\"h4\" component=\"h2\" fontWeight=\"bold\">{t('aboutPage.mission.title')}</Typography>\n          </Stack>\n          <Typography variant=\"h6\" sx={{ maxWidth: 720, mx: 'auto', color: 'rgba(255,255,255,0.7)', mb: 3 }}>\n            {t('aboutPage.mission.subtitle')}\n          </Typography>\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} justifyContent=\"center\">\n            {missionPoints.map((point, i) => (\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1} key={i}>\n                <CheckCircleOutlineIcon sx={{ color: 'success.main' }}/>\n                <Typography>{point}</Typography>\n              </Stack>\n            ))}\n          </Stack>\n        </Box>\n        \n        <Divider sx={{ my: 8, borderColor: 'rgba(255,255,255,0.2)' }} />\n\n        {/* Why Us Section */}\n        <Box sx={{ my: 8 }}>\n          <Typography variant=\"h4\" component=\"h2\" fontWeight=\"bold\" align=\"center\" sx={{ mb: 6 }}>\n            {t('aboutPage.whyUs.title')}\n          </Typography>\n          <Grid container spacing={4}>\n            {whyUsCards.map((card, i) => (\n              <Grid item xs={12} md={4} key={i}>\n                <Paper sx={{ p: 4, bgcolor: '#1c1c1c', borderRadius: 4, textAlign: 'center', height: '100%', transition: 'all 0.3s ease', '&:hover': { transform: 'translateY(-10px)', boxShadow: '0 10px 20px rgba(255,215,0,0.15)' }}}>\n                  <Typography fontSize=\"3rem\">{card.icon}</Typography>\n                  <Typography variant=\"h6\" fontWeight=\"bold\" my={1}>{card.title}</Typography>\n                  <Typography sx={{ color: 'rgba(255,255,255,0.6)' }}>{card.description}</Typography>\n                </Paper>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        {/* How It Works Section */}\n        <Box sx={{ my: 8, py: 6, bgcolor: '#1c1c1c', borderRadius: 4 }}>\n          <Typography variant=\"h4\" component=\"h2\" fontWeight=\"bold\" align=\"center\" sx={{ mb: 6 }}>\n            {t('aboutPage.howItWorks.title')}\n          </Typography>\n          <Grid container spacing={4} sx={{ px: 4 }}>\n            {howItWorksSteps.map((item, idx) => (\n              <Grid item xs={12} md={4} key={idx}>\n                <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                  <Typography variant=\"h2\" fontWeight=\"bold\" sx={{ color: '#FFD700', opacity: 0.5 }}>{`0${idx + 1}`}</Typography>\n                  <Box>\n                    <Typography variant=\"h6\" fontWeight=\"bold\">{item.step}</Typography>\n                    <Typography sx={{ color: 'rgba(255,255,255,0.6)' }}>{item.desc}</Typography>\n                  </Box>\n                </Stack>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        {/* Testimonials & Coaches */}\n        <Grid container spacing={8} sx={{ my: 8 }}>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h4\" component=\"h2\" fontWeight=\"bold\" sx={{ mb: 3 }}>\n              {t('aboutPage.testimonials.title')}\n            </Typography>\n            <Paper sx={{ p: 4, bgcolor: '#1c1c1c', borderRadius: 4, minHeight: 180 }}>\n              <SwitchTransition>\n                <CSSTransition key={currentTestimonialIndex} timeout={300} classNames=\"fade\">\n                  <Box>\n                    {testimonials.length > 0 ? (\n                      <>\n                        <Typography fontStyle=\"italic\" fontSize=\"1.1rem\" sx={{ color: 'rgba(255,255,255,0.8)' }}>\n                          “{testimonials[currentTestimonialIndex].quote}”\n                        </Typography>\n                        <Typography fontWeight=\"bold\" mt={2} sx={{ color: '#FFD700' }}>\n                          — {testimonials[currentTestimonialIndex].name}\n                        </Typography>\n                      </>\n                    ) : null}\n                  </Box>\n                </CSSTransition>\n              </SwitchTransition>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h4\" component=\"h2\" fontWeight=\"bold\" sx={{ mb: 3 }}>\n              {t('aboutPage.ourCoaches.title')}\n            </Typography>\n            <Stack spacing={2}>\n              {coaches.map((coach, idx) => (\n                <Paper key={idx} sx={{ p: 2, bgcolor: '#1c1c1c', borderRadius: 2 }}>\n                  <Typography variant=\"h6\" fontWeight=\"bold\">{coach.name}</Typography>\n                  <Typography variant=\"body2\" fontStyle=\"italic\" sx={{ color: 'rgba(255,255,255,0.6)' }}>{coach.quote}</Typography>\n                </Paper>\n              ))}\n              <Button variant=\"text\" onClick={() => navigate('/coaches')} sx={{ color: '#FFD700', alignSelf: 'flex-start' }}>\n                {t('aboutPage.ourCoaches.viewAll')} →\n              </Button>\n            </Stack>\n          </Grid>\n        </Grid>\n\n        <Divider sx={{ my: 8, borderColor: 'rgba(255,255,255,0.2)' }} />\n        \n        <Typography align=\"center\" fontWeight=\"bold\" variant=\"h5\" component=\"p\" sx={{ fontStyle: 'italic' }}>\n          {t('aboutPage.finalSlogan')}\n        </Typography>\n\n      </Container>\n    </Box>\n  );\n};","import React from 'react';\nimport { Container, Typography } from '@mui/material';\n\nexport const Achievements: React.FC = () => {\n  return (\n    <Container>\n      <Typography variant=\"h3\" gutterBottom>\n        Achievments\n      </Typography>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  return !!token; \n};\n\nconst PrivateRoute: React.FC = () => {\n  return isAuthenticated() ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import axiosInstance from '@/api';\nimport { User } from '@/types/User';\n\nexport const getProfile = async (): Promise<User> => {\n  const response = await axiosInstance.get('/auth/profile');\n  return response.data;\n};\n","import axiosInstance from '@/api';\nimport { User } from '@/types/User';\n\ninterface UpdateProfilePayload {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  currentPassword?: string;\n  newPassword?: string;\n  avatar?: File;\n}\n\nexport const updateProfile = async (data: UpdateProfilePayload): Promise<User> => {\n  const formData = new FormData();\n\n  (Object.keys(data) as Array<keyof UpdateProfilePayload>).forEach(key => {\n    const value = data[key];\n    if (value) {\n      formData.append(key, value);\n    }\n  });\n\n  const response = await axiosInstance.put('/auth/profile', formData);\n  return response.data;\n};\n\n","import axiosInstance from '@/api';\n\nexport const getAvatarUrl = (userId: string): string => {\n  const baseURL = axiosInstance.defaults.baseURL;\n  \n  if (!baseURL) {\n    return '/default-avatar.png'; \n  }\n  \n  return `${baseURL}/auth/avatar/${userId}`;\n};","import axiosInstance from '@/api';\n\nexport const getPlayerStats = async (userId: string): Promise<any> => { \n  const response = await axiosInstance.get(`/player/${userId}`);\n  return response.data;\n};\n","import React, { useState, ChangeEvent } from 'react';\nimport {\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Avatar,\n  Box,\n  Link,\n} from '@mui/material';\nimport { updateProfile } from '@/api/profile';\nimport { notification } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\ninterface EditProfileProps {\n  user: any;\n  onClose: () => void;\n}\n\nconst EditProfileForm: React.FC<EditProfileProps> = ({ user, onClose }) => {\n  const { t } = useTranslation();\n\n  const [firstName, setFirstName] = useState(user.firstName);\n  const [lastName, setLastName] = useState(user.lastName);\n  const [email, setEmail] = useState(user.email);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [avatarPreview, setAvatarPreview] = useState<string | undefined>(user.photoUrl);\n\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      setSelectedFile(file);\n      setAvatarPreview(URL.createObjectURL(file));\n    }\n  };\n\n  const handleSubmit = async () => {\n    try {\n      if (!showPassword) {\n        await updateProfile({\n          firstName,\n          lastName,\n          email,\n          avatar: selectedFile || undefined,\n        });\n        notification.success({\n          message: t('profile_edit.updated'),\n          description: undefined\n        });\n      } else {\n        if (!currentPassword || newPassword !== confirmPassword) {\n          notification.error({\n            message: t('profile_edit.passwordMismatch'),\n            description: undefined\n          });\n          return;\n        }\n\n        await updateProfile({\n          currentPassword,\n          newPassword,\n          avatar: selectedFile || undefined,\n        });\n\n        notification.success({\n          message: t('profile_edit.passwordChanged'),\n          description: undefined\n        });\n      }\n\n      onClose();\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n      notification.error({\n        message: t('profile_edit.updateFailed'),\n        description: undefined\n      });\n    }\n  };\n\n  return (\n    <Dialog open onClose={onClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>{t('profile_edit.editTitle')}</DialogTitle>\n      <DialogContent>\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\" mb={2}>\n          <Avatar src={avatarPreview} sx={{ width: 96, height: 96, mb: 1 }} />\n          <Button variant=\"text\" size=\"small\" component=\"label\">\n            {t('profile_edit.uploadAvatar')}\n            <input hidden accept=\"image/*\" type=\"file\" onChange={handleFileChange} />\n          </Button>\n        </Box>\n\n        <TextField\n          margin=\"dense\"\n          label={t('profile_edit.firstName')}\n          fullWidth\n          value={firstName}\n          onChange={(e) => setFirstName(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label={t('profile_edit.lastName')}\n          fullWidth\n          value={lastName}\n          onChange={(e) => setLastName(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          label={t('profile_edit.email')}\n          fullWidth\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n\n        {!showPassword && (\n          <Box mt={1}>\n            <Link component=\"button\" variant=\"body2\" onClick={() => setShowPassword(true)}>\n              {t('profile_edit.changePassword')}\n            </Link>\n          </Box>\n        )}\n\n        {showPassword && (\n          <Box mt={2}>\n            <TextField\n              margin=\"dense\"\n              label={t('profile_edit.currentPassword')}\n              fullWidth\n              type=\"password\"\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n            />\n            <TextField\n              margin=\"dense\"\n              label={t('profile_edit.newPassword')}\n              fullWidth\n              type=\"password\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n            />\n            <TextField\n              margin=\"dense\"\n              label={t('profile_edit.confirmPassword')}\n              fullWidth\n              type=\"password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Box>\n        )}\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose}>{t('profile_edit.cancel')}</Button>\n        <Button variant=\"contained\" onClick={handleSubmit}>\n          {t('profile_edit.save')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditProfileForm;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Container, Typography, Button, Paper, Grid, CircularProgress, Box, Stack, Avatar\n} from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport EditProfileForm from '../../components/Profile/EditProfileForm';\nimport { getProfile, getPlayerStats, getAvatarUrl } from '../../api/profile';\nimport { User } from '@/types/User';\n\n// Icons\nimport WhatshotIcon from '@mui/icons-material/Whatshot'; // Bullet\nimport BoltIcon from '@mui/icons-material/Bolt'; // Blitz\nimport TimerIcon from '@mui/icons-material/Timer'; // Rapid\nimport StyleIcon from '@mui/icons-material/Style'; // Classic\nimport EditIcon from '@mui/icons-material/Edit';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\ninterface PlayerStatsFormat {\n  rating: number;\n  gamesPlayed: number;\n  gamesWon: number;\n  gamesDrawn: number;\n  gamesLost: number;\n}\n\ninterface PlayerStats {\n  bullet: PlayerStatsFormat;\n  blitz: PlayerStatsFormat;\n  rapid: PlayerStatsFormat;\n  classic: PlayerStatsFormat;\n}\n\nconst statIcons: { [key: string]: React.ReactElement } = {\n  bullet: <WhatshotIcon />,\n  blitz: <BoltIcon />,\n  rapid: <TimerIcon />,\n  classic: <StyleIcon />,\n};\n\nexport const ProfilePage: React.FC = () => {\n  const { t } = useTranslation();\n  const [user, setUser] = useState<User | null>(null);\n  const [playerStats, setPlayerStats] = useState<PlayerStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const profile = await getProfile();\n        const stats = await getPlayerStats(profile._id);\n        setUser(stats.user);\n        setPlayerStats({ bullet: stats.bullet, blitz: stats.blitz, rapid: stats.rapid, classic: stats.classic });\n      } catch (err) {\n        setError(t('profile.errorLoadingProfile'));\n        // Optional: Redirect after a delay to show the error message\n        // setTimeout(() => navigate('/login'), 3000);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [t, navigate]);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/login');\n  };\n\n  if (isLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh', bgcolor: '#0e0e0e' }}>\n        <CircularProgress sx={{ color: '#FFD700' }} />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '80vh', bgcolor: '#0e0e0e' }}>\n          <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ bgcolor: '#0e0e0e', color: 'white', minHeight: '100vh', py: 5 }}>\n      <Container maxWidth=\"lg\">\n        {user && (\n          <>\n            <Box sx={{ textAlign: 'center', mb: 5 }}>\n                <Typography variant=\"h2\" component=\"h1\" fontWeight=\"bold\">{t('profile.title')}</Typography>\n                <Typography variant=\"h6\" sx={{ mt: 1, color: 'rgba(255, 255, 255, 0.7)' }}>{t('profile.subtitle')}</Typography>\n            </Box>\n\n            <Paper sx={{ p: { xs: 2, md: 4 }, mb: 4, bgcolor: '#1c1c1c', borderRadius: 4, color: 'white' }}>\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={4} alignItems=\"center\">\n                <Avatar src={getAvatarUrl(user._id)} sx={{ width: 120, height: 120, border: '4px solid #FFD700' }} />\n                <Box sx={{ flexGrow: 1, textAlign: { xs: 'center', md: 'left' } }}>\n                  <Typography variant=\"h4\" fontWeight=\"bold\">{user.firstName} {user.lastName}</Typography>\n                  <Typography sx={{ color: 'rgba(255, 255, 255, 0.5)', textTransform: 'capitalize', mb: 1 }}>{user.roles[0] || 'User'}</Typography>\n                  <Typography variant=\"body1\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>{user.email}</Typography>\n                  <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.5)' }}>\n                    {t('profile.registrationDate')}: {new Date(user.registrationDate).toLocaleDateString()}\n                  </Typography>\n                </Box>\n                <Stack direction=\"row\" spacing={2} sx={{ mt: { xs: 3, md: 0 } }}>\n                  <Button variant=\"outlined\" onClick={() => setIsEditing(true)} startIcon={<EditIcon />} sx={{ color: '#FFD700', borderColor: '#FFD700' }}>\n                    {t('profile.editProfile')}\n                  </Button>\n                  <Button variant=\"contained\" color=\"error\" onClick={handleLogout} startIcon={<LogoutIcon />}>\n                    {t('profile.logout')}\n                  </Button>\n                </Stack>\n              </Stack>\n            </Paper>\n\n            {playerStats && (\n              <Paper sx={{ p: { xs: 2, md: 4 }, mb: 4, bgcolor: '#1c1c1c', borderRadius: 4, color: 'white' }}>\n                <Typography variant=\"h5\" fontWeight=\"bold\" sx={{ mb: 3 }}>{t('profile.playerStats')}</Typography>\n                <Grid container spacing={3}>\n                  {Object.entries(playerStats).map(([key, stats]) => (\n                    <Grid item xs={12} sm={6} md={3} key={key}>\n                      <Paper sx={{ p: 2, borderRadius: 3, textAlign: 'center', bgcolor: '#2a2a2a', height: '100%' }}>\n                        <Stack direction=\"row\" spacing={1} alignItems=\"center\" justifyContent=\"center\" sx={{ color: '#FFD700' }}>\n                          {statIcons[key]}\n                          <Typography variant=\"h6\" fontWeight=\"bold\" textTransform=\"capitalize\">{t(`profile.${key}`)}</Typography>\n                        </Stack>\n                        <Typography variant=\"h3\" fontWeight=\"bold\" my={1}>{stats.rating}</Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\" sx={{ color: 'rgba(255,255,255,0.5)', mb: 2 }}>\n                          {stats.gamesPlayed} {t('profile.games')}\n                        </Typography>\n                        <Stack direction=\"row\" justifyContent=\"space-around\" spacing={1}>\n                          <Box>\n                            <Typography color=\"success.main\" fontWeight=\"bold\">{stats.gamesWon}</Typography>\n                            <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.5)' }}>{t('profile.win')}</Typography>\n                          </Box>\n                           <Box>\n                            <Typography fontWeight=\"bold\">{stats.gamesDrawn}</Typography>\n                            <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.5)' }}>{t('profile.draw')}</Typography>\n                          </Box>\n                           <Box>\n                            <Typography color=\"error.main\" fontWeight=\"bold\">{stats.gamesLost}</Typography>\n                            <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.5)' }}>{t('profile.loss')}</Typography>\n                          </Box>\n                        </Stack>\n                      </Paper>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Paper>\n            )}\n\n            {isEditing && (\n              <EditProfileForm user={user} onClose={() => setIsEditing(false)} />\n            )}\n          </>\n        )}\n      </Container>\n    </Box>\n  );\n};","// src/shared/components/CustomTable/CustomTable.tsx\n\nimport React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n  TablePagination,\n} from '@mui/material';\n\n// Универсальный тип строки таблицы. Гарантирует наличие `id`.\ninterface RowData {\n  id: string | number;\n  [key: string]: any;\n}\n\n// ИСПРАВЛЕНИЕ: Мы экспортируем этот тип, чтобы другие компоненты могли его использовать.\n// Также, `field` теперь может быть специальным значением 'actions',\n// а для таких полей мы добавим опциональный `render`.\nexport interface Column<T> {\n  field: keyof T | 'actions';\n  label: string;\n  render?: (row: T) => React.ReactNode;\n}\n\n// Пропсы для нашего универсального компонента.\ninterface CustomTableProps<T extends RowData> {\n  columns: Column<T>[];\n  data: T[];\n}\n\nconst CustomTable = <T extends RowData>({ columns, data }: CustomTableProps<T>) => {\n  const [search, setSearch] = useState<string>('');\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\n  const [page, setPage] = useState<number>(0);\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n    setPage(0); // Сбрасываем на первую страницу при поиске\n  };\n\n  const handleChangePage = (_event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  const filteredData = data.filter((row) =>\n    columns.some((column) => {\n      // Не ищем по колонке 'actions'\n      if (column.field === 'actions') return false;\n      const value = row[column.field as keyof T];\n      return value?.toString().toLowerCase().includes(search.toLowerCase());\n    })\n  );\n\n  return (\n    <Paper>\n      <TextField\n        fullWidth\n        label=\"Поиск\"\n        variant=\"outlined\"\n        value={search}\n        onChange={handleSearch}\n        style={{ padding: '16px' }}\n      />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell key={String(column.field)}>{column.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n              <TableRow key={row.id}>\n                {columns.map((column) => (\n                  <TableCell key={String(column.field)}>\n                    {column.render ? column.render(row) : row[column.field as keyof T]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 20, 50, 100]}\n        component=\"div\"\n        count={filteredData.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n};\n\nexport default CustomTable;","// src/pages/users-page/users-page.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  Snackbar,\n  Alert,\n  IconButton,\n} from \"@mui/material\";\nimport { Delete, Edit } from \"@mui/icons-material\";\n\nimport axiosInstance from \"@/api\"; \nimport CustomTable, { Column } from \"@/shared/components/CustomTable/CustomTable\";\nimport { User } from \"@/types/User\";\n\n// Обновляем тип для данных с бэкенда, чтобы он соответствовал реальности\ninterface BackendUser {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: string[];\n  registrationDate: string; // С бэкенда приходит строка!\n  // Добавляем опциональные поля, если они могут прийти\n  students?: any[]; // Замените any на Student, если есть импорт\n  trainer?: string;\n  trainerEmail?: string;\n  firebaseUID?: string;\n}\n\nexport const UsersPage: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [newRole, setNewRole] = useState<string>(\"\");\n  const [actionType, setActionType] = useState<\"add\" | \"remove\">(\"add\");\n  const [open, setOpen] = useState<boolean>(false);\n  const [confirmDeleteOpen, setConfirmDeleteOpen] = useState<boolean>(false);\n  const [snackbar, setSnackbar] = useState<{ open: boolean; message: string; severity: \"success\" | \"error\" }>({\n    open: false,\n    message: \"\",\n    severity: \"success\",\n  });\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axiosInstance.get<BackendUser[]>(\"/users\");\n\n        // ИСПРАВЛЕНИЕ: Создаем объекты, которые ПОЛНОСТЬЮ соответствуют типу User\n        const mappedUsers: User[] = response.data.map((user: any) => ({\n          id: user._id,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          email: user.email,\n          roles: user.roles,\n          \n          // 👇 Вот ключевые исправления, которые решают ошибку\n          _id: user._id, // 1. Добавляем обязательное поле _id\n          registrationDate: new Date(user.registrationDate), // 2. Преобразуем строку в объект Date\n\n          // 3. (Хорошая практика) Прокидываем опциональные поля\n          firebaseUID: user.firebaseUID,\n          students: user.students,\n          trainer: user.trainer,\n          trainerEmail: user.trainerEmail,\n        }));\n        setUsers(mappedUsers);\n      } catch (error) {\n        console.error(\"Ошибка при получении списка пользователей:\", error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // ... остальной код компонента без изменений ...\n  const handleOpen = (user: User) => {\n    setSelectedUser(user);\n    setNewRole(\"\");\n    setActionType(\"add\");\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setSelectedUser(null);\n    setOpen(false);\n  };\n\n  const handleConfirmDeleteOpen = (user: User) => {\n    setSelectedUser(user);\n    setConfirmDeleteOpen(true);\n  };\n\n  const handleConfirmDeleteClose = () => {\n    setConfirmDeleteOpen(false);\n    setSelectedUser(null);\n  };\n\n  const handleRoleChange = async () => {\n    if (!selectedUser) return;\n    try {\n      await axiosInstance.put(\"/admin/update-role\", {\n        userEmail: selectedUser.email,\n        role: newRole,\n        action: actionType,\n      });\n\n      setUsers(users.map(user =>\n        user.id === selectedUser.id\n          ? {\n              ...user,\n              roles: actionType === \"add\" ? [...user.roles, newRole] : user.roles.filter(role => role !== newRole),\n            }\n          : user\n      ));\n      setSnackbar({ open: true, message: \"Роль успешно изменена\", severity: \"success\" });\n      handleClose();\n    } catch (error) {\n      console.error(\"Ошибка при изменении роли:\", error);\n      setSnackbar({ open: true, message: \"Ошибка при изменении роли\", severity: \"error\" });\n    }\n  };\n\n  const handleDeleteUser = async () => {\n    if (!selectedUser) return;\n    try {\n      await axiosInstance.delete(`/admin/delete-user/${selectedUser.id}`);\n      setUsers(users.filter(user => user.id !== selectedUser.id));\n      setSnackbar({ open: true, message: \"Пользователь удалён\", severity: \"success\" });\n      handleConfirmDeleteClose();\n    } catch (error) {\n      console.error(\"Ошибка при удалении пользователя:\", error);\n      setSnackbar({ open: true, message: \"Ошибка при удалении пользователя\", severity: \"error\" });\n    }\n  };\n\n  const columns: Column<User>[] = [\n    { field: \"firstName\", label: \"Имя\" },\n    { field: \"lastName\", label: \"Фамилия\" },\n    { field: \"email\", label: \"Email\" },\n    { field: \"roles\", label: \"Роли\", render: (user) => user.roles.join(', ') },\n    {\n      field: \"actions\",\n      label: \"Действия\",\n      render: (user: User) => (\n        <>\n          <IconButton size=\"small\" onClick={() => handleOpen(user)}>\n            <Edit />\n          </IconButton>\n          <IconButton size=\"small\" color=\"error\" onClick={() => handleConfirmDeleteOpen(user)}>\n            <Delete />\n          </IconButton>\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>Список пользователей</Typography>\n      <CustomTable columns={columns} data={users} />\n\n      {/* Диалоговые окна без изменений... */}\n      <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xs\">\n        <DialogTitle>Управление ролями</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Пользователь: <strong>{selectedUser?.firstName} {selectedUser?.lastName}</strong>\n          </DialogContentText>\n          <FormControl fullWidth sx={{ marginTop: 2 }}>\n            <InputLabel>Роль</InputLabel>\n            <Select value={newRole} onChange={(e) => setNewRole(e.target.value)} label=\"Роль\">\n              <MenuItem value=\"student\">Студент</MenuItem>\n              <MenuItem value=\"coach\">Тренер</MenuItem>\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Отмена</Button>\n          <Button onClick={handleRoleChange} color=\"primary\" disabled={!newRole}>Сохранить</Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={confirmDeleteOpen} onClose={handleConfirmDeleteClose}>\n        <DialogTitle>Подтвердите удаление</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Вы уверены, что хотите удалить пользователя {selectedUser?.email}? Это действие необратимо.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmDeleteClose}>Нет</Button>\n          <Button onClick={handleDeleteUser} color=\"error\">Да, удалить</Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={snackbar.open} autoHideDuration={4000} onClose={() => setSnackbar({ ...snackbar, open: false })}>\n        <Alert severity={snackbar.severity} onClose={() => setSnackbar({ ...snackbar, open: false })} variant=\"filled\">\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};","import axiosInstance from '@/api';\nimport { ScheduleEvent } from '@/types/SheduleEvent'; \n\nexport const getScheduleByStudent = async (studentId: string): Promise<ScheduleEvent[]> => {\n  const response = await axiosInstance.get(`/schedule/student/${studentId}`);\n  return response.data;\n};\n","import axiosInstance from '@/api';\nimport { ScheduleEvent, ScheduleEventPayload } from '@/types/SheduleEvent'; \n\nexport const createScheduleEvent = async (payload: ScheduleEventPayload): Promise<ScheduleEvent> => {\n  const response = await axiosInstance.post('/schedule/create', payload);\n  return response.data;\n};\n","import axiosInstance from '@/api';\nimport { ScheduleEvent, ScheduleEventPayload } from '@/types/SheduleEvent';\n\nexport const updateScheduleEvent = async (eventId: string, payload: ScheduleEventPayload): Promise<ScheduleEvent> => {\n  const response = await axiosInstance.put(`/schedule/${eventId}`, payload);\n  return response.data;\n};","import axiosInstance from '@/api';\n\nexport const deleteScheduleEvent = async (eventId: string): Promise<void> => {\n  await axiosInstance.delete(`/schedule/${eventId}`);\n};","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n    Dialog, DialogTitle, DialogContent, DialogActions, Button, TextField,\n    MenuItem, Select, FormControl, InputLabel, Grid, Paper, IconButton,\n    Stack, Typography, Box, SelectChangeEvent, Tooltip,\n} from '@mui/material';\nimport { Calendar, momentLocalizer, Event as BigCalendarEvent } from 'react-big-calendar';\nimport moment from 'moment';\nimport { notification } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\n// MUI Icons\nimport CloseIcon from '@mui/icons-material/Close';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport SaveIcon from '@mui/icons-material/Save';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\n\n// Local Imports\nimport {\n  getScheduleByStudent, createScheduleEvent,\n  updateScheduleEvent, deleteScheduleEvent\n} from '@/api/schedule';\nimport { Student } from '@/types/Student';\nimport { ScheduleEvent, ScheduleEventPayload } from '@/types/SheduleEvent';\n\n// SCSS Styles\nimport './styles.scss';\n\nconst localizer = momentLocalizer(moment);\n\n// Иконки для типов событий\nconst eventTypeIcons = {\n  individual_lesson: <EventNoteIcon fontSize=\"small\" />,\n  group_lesson: <PeopleIcon fontSize=\"small\" />,\n  homework: <AssignmentIcon fontSize=\"small\" />,\n  opening_study: <MenuBookIcon fontSize=\"small\" />,\n  tournament_participation: <EmojiEventsIcon fontSize=\"small\" />,\n};\n\nconst eventTypes: (keyof typeof eventTypeIcons)[] = [\n    \"individual_lesson\", \"group_lesson\", \"homework\",\n    \"opening_study\", \"tournament_participation\"\n];\n\n// Кастомный компонент для отображения события в календаре\nconst CustomEvent: React.FC<{ event: BigCalendarEvent & Partial<ScheduleEvent> }> = ({ event }) => {\n  const eventType = event.type as keyof typeof eventTypeIcons;\n  if (!eventType) return null;\n\n  const icon = eventTypeIcons[eventType];\n  const className = `custom-event rbc-event--${eventType}`;\n\n  return (\n    <Tooltip title={event.description || event.title} placement=\"top\">\n      <div className={className}>\n        {icon}\n        <Typography variant=\"caption\" noWrap component=\"span\">{event.title}</Typography>\n      </div>\n    </Tooltip>\n  );\n};\n\n\ninterface EditScheduleModalProps {\n    open: boolean;\n    onClose: () => void;\n    student: Student | null;\n}\n\nconst EditScheduleModal: React.FC<EditScheduleModalProps> = ({ open, onClose, student }) => {\n    const { t } = useTranslation();\n    const [events, setEvents] = useState<ScheduleEvent[]>([]);\n    const [selectedEvent, setSelectedEvent] = useState<Partial<ScheduleEvent>>({});\n    const [selectedDate, setSelectedDate] = useState<Date | null>(null);\n\n    if (!student) return null;\n\n    const studentName = `${student.firstName} ${student.lastName}`;\n\n    const resetForm = useCallback(() => {\n        setSelectedEvent({\n            student: student._id, status: 'scheduled',\n            title: '', type: 'individual_lesson', date: '',\n            description: '', link: ''\n        });\n        setSelectedDate(null);\n    }, [student]);\n\n    const fetchSchedule = useCallback(async () => {\n        if (!student._id) return;\n        try {\n            const studentSchedule = await getScheduleByStudent(student._id);\n            setEvents(studentSchedule);\n        } catch (error) {\n            console.error('Failed to fetch schedule:', error);\n            notification.error({\n                message: t('schedule.fetchError'),\n                description: undefined\n            });\n        }\n    }, [student, t]);\n    \n    // --- ПОЛНАЯ ЛОГИКА СОХРАНЕНИЯ ---\n    const handleSaveEvent = async () => {\n        const { date, type, title } = selectedEvent;\n        if (!date || !type || !title) {\n            notification.error({\n                message: t('schedule.fieldRequired'),\n                description: undefined\n            });\n            return;\n        }\n\n        const payload: ScheduleEventPayload = {\n            studentId: student._id,\n            date: new Date(date).toISOString(),\n            title: title,\n            description: selectedEvent.description || \"\",\n            link: selectedEvent.link || \"\",\n            type: type,\n            status: selectedEvent.status || 'scheduled',\n        };\n\n        try {\n            const isUpdating = !!selectedEvent._id;\n            if (isUpdating) {\n                await updateScheduleEvent(selectedEvent._id!, payload);\n            } else {\n                await createScheduleEvent(payload);\n            }\n            notification.success({\n                message: t(isUpdating ? 'schedule.updateSuccess' : 'schedule.createSuccess'),\n                description: undefined\n            });\n            await fetchSchedule();\n            resetForm();\n        } catch (error) {\n            console.error('Failed to save event:', error);\n        }\n    };\n    \n    // --- ПОЛНАЯ ЛОГИКА УДАЛЕНИЯ ---\n    const handleDeleteEvent = async () => {\n        if (!selectedEvent._id) return;\n        try {\n            await deleteScheduleEvent(selectedEvent._id);\n            notification.success({\n                message: t('schedule.deleteSuccess'),\n                description: undefined\n            });\n            await fetchSchedule();\n            resetForm();\n        } catch (error) {\n            console.error('Failed to delete event:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (open && student) {\n            fetchSchedule();\n            resetForm();\n        }\n    }, [open, student, fetchSchedule, resetForm]);\n\n    const handleSelectSlot = useCallback(({ start }: { start: Date }) => {\n        resetForm();\n        setSelectedDate(start);\n        setSelectedEvent(prev => ({\n            ...prev,\n            date: moment(start).format('YYYY-MM-DDTHH:mm'),\n        }));\n    }, [resetForm]);\n\n    const handleSelectEvent = useCallback((event: BigCalendarEvent & Partial<ScheduleEvent>) => {\n        setSelectedDate(event.date ? new Date(event.date) : null);\n        setSelectedEvent({\n            ...event,\n            date: event.date ? moment(event.date).format('YYYY-MM-DDTHH:mm') : '',\n        });\n    }, []);\n\n    const calendarEvents = events.map(event => ({\n      ...event, id: event._id, start: new Date(event.date),\n      end: moment(event.date).add(1, 'hour').toDate(), title: event.title,\n    }));\n    \n    const dayPropGetter = useCallback((date: Date) => ({\n        className: (selectedDate && moment(date).isSame(selectedDate, 'day'))\n            ? 'rbc-selected-slot-custom'\n            : '',\n    }), [selectedDate]);\n\n    const handleFormInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        const { name, value } = e.target;\n        setSelectedEvent(prev => ({ ...prev, [name]: value }));\n    };\n    \n    const handleTypeChange = (e: SelectChangeEvent<string>) => {\n        setSelectedEvent(prev => ({ ...prev, type: e.target.value as ScheduleEvent['type'] }));\n    };\n\n    return (\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"lg\" className=\"schedule-dialog\">\n            <DialogTitle className=\"schedule-dialog__header\">\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Typography variant=\"h6\" component=\"div\">{t('schedule.editScheduleTitle', { studentName })}</Typography>\n                    <IconButton aria-label=\"close\" onClick={onClose} className=\"schedule-dialog__close-btn\">\n                        <CloseIcon />\n                    </IconButton>\n                </Stack>\n            </DialogTitle>\n            <DialogContent dividers className=\"schedule-dialog__content\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} md={7}>\n                        <Calendar\n                            localizer={localizer}\n                            events={calendarEvents}\n                            startAccessor=\"start\" endAccessor=\"end\"\n                            selectable onSelectSlot={handleSelectSlot}\n                            onSelectEvent={handleSelectEvent}\n                            components={{ event: CustomEvent }}\n                            dayPropGetter={dayPropGetter}\n                            className=\"schedule-calendar\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Paper component=\"form\" className=\"event-form\" onSubmit={(e) => { e.preventDefault(); handleSaveEvent(); }}>\n                            <Typography variant=\"h6\" className=\"event-form__header\">\n                                {selectedEvent._id\n                                    ? t('schedule.eventDetails')\n                                    : selectedDate\n                                    ? t('schedule.addEventForDate', { date: moment(selectedDate).format('MMMM Do, YYYY') })\n                                    : t('schedule.addEvent')\n                                }\n                            </Typography>\n                            <Stack spacing={2.5} className=\"event-form__fields\">\n                                <TextField name=\"title\" label={t('schedule.form_title')} variant=\"filled\" fullWidth\n                                    value={selectedEvent.title || ''} onChange={handleFormInputChange} className=\"event-form__field\"/>\n                                \n                                <FormControl variant=\"filled\" fullWidth className=\"event-form__field\">\n                                    <InputLabel>{t('schedule.form_type')}</InputLabel>\n                                    <Select name=\"type\" value={selectedEvent.type || ''} onChange={handleTypeChange}>\n                                        {eventTypes.map(type => (\n                                            <MenuItem key={type} value={type}>{t(`schedule.eventTypes.${type}`)}</MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                                \n                                <TextField name=\"description\" label={t('schedule.form_description')} variant=\"filled\" fullWidth multiline rows={3}\n                                    value={selectedEvent.description || ''} onChange={handleFormInputChange} className=\"event-form__field\"/>\n\n                                <TextField name=\"link\" label={t('schedule.form_link')} variant=\"filled\" fullWidth\n                                    value={selectedEvent.link || ''} onChange={handleFormInputChange} className=\"event-form__field\"/>\n                                \n                                <TextField name=\"date\" label={t('schedule.form_date')} type=\"datetime-local\" variant=\"filled\" fullWidth\n                                    value={selectedEvent.date || ''} onChange={handleFormInputChange}\n                                    InputLabelProps={{ shrink: true }} className=\"event-form__field\"/>\n                            </Stack>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions className=\"schedule-dialog__actions\">\n                <Button onClick={onClose} className=\"action-button action-button--close\">{t('common.close')}</Button>\n                <Box sx={{ flex: '1 1 auto' }} /> \n                {selectedEvent._id && (\n                    <Button onClick={handleDeleteEvent} variant=\"outlined\" startIcon={<DeleteIcon />} className=\"action-button action-button--delete\">\n                        {t('common.delete')}\n                    </Button>\n                )}\n                <Button onClick={handleSaveEvent} variant=\"contained\" startIcon={selectedEvent._id ? <SaveIcon /> : <AddCircleOutlineIcon />} className=\"action-button action-button--save\">\n                    {selectedEvent._id ? t('common.save') : t('common.add')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default EditScheduleModal;","import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, CircularProgress } from '@mui/material';\nimport { useTranslation } from \"react-i18next\";\nimport { notification } from 'antd';\n\nimport { \n  getStudentIdsByCoach, \n  getStudentDetails, \n  removeStudentFromCoach \n} from '@/api/coaches';\n\nimport { Student } from '@/types/Student';\nimport EditScheduleModal from '../../components/Schedule/EditScheduleModal';\n\nexport const StudentsPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [students, setStudents] = useState<Student[]>([]);\n  const [selectedStudent, setSelectedStudent] = useState<Student | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const coachEmail = useMemo(() => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr).email : null;\n  }, []);\n\n  const fetchStudents = useCallback(async () => {\n    if (!coachEmail) {\n      setIsLoading(false);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const studentIds = await getStudentIdsByCoach(coachEmail);\n\n      if (!Array.isArray(studentIds) || studentIds.length === 0) {\n  setStudents([]);\n  return;\n}\n\n      const studentDetailsPromises = studentIds.map(id => getStudentDetails(coachEmail, id));\n\n      \n      const studentDetails = await Promise.all(studentDetailsPromises);\n      \n      setStudents(studentDetails.filter((student): student is Student => student !== null));\n\n    } catch (error) {\n      console.error('Ошибка при получении списка учеников:', error);\n      notification.error({\n        message: t('studentsPage.fetchError'),\n        description: undefined\n      });\n      setStudents([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [coachEmail, t]);\n\n\n  const handleRemoveStudent = async (studentId: string) => {\n    if (!coachEmail) return;\n    try {\n      await removeStudentFromCoach(coachEmail, studentId);\n      notification.success({\n        message: t('studentsPage.studentDeletedSuccess'),\n        description: undefined\n      });\n      setStudents(prevStudents => prevStudents.filter(s => s._id !== studentId));\n    } catch (error) {\n      console.error('Ошибка при удалении ученика:', error);\n    }\n  };\n\n  const handleEditSchedule = (student: Student) => {\n    setSelectedStudent(student);\n    setOpenModal(true);\n  };\n  \n  useEffect(() => {\n    fetchStudents();\n  }, [fetchStudents]);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        {t(\"studentsPage.studentsListTitle\")}\n      </Typography>\n      <Paper>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"studentsPage.firstName\")}</TableCell>\n              <TableCell>{t(\"studentsPage.lastName\")}</TableCell>\n              <TableCell>{t(\"studentsPage.email\")}</TableCell>\n              <TableCell align=\"right\">{t(\"studentsPage.actions\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {isLoading ? (\n              <TableRow>\n                <TableCell colSpan={4} align=\"center\">\n                  <CircularProgress />\n                  <Typography sx={{ mt: 1 }}>{t('common.loading')}</Typography>\n                </TableCell>\n              </TableRow>\n            ) : students.length > 0 ? (\n              students.map((student) => (\n                <TableRow key={student._id}>\n                  <TableCell>{student.firstName}</TableCell>\n                  <TableCell>{student.lastName}</TableCell>\n                  <TableCell>{student.email}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => handleEditSchedule(student)}\n                      style={{ marginRight: 10 }}\n                    >\n                      {t(\"studentsPage.editSchedule\")}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => handleRemoveStudent(student._id)}\n                    >\n                      {t(\"studentsPage.delete\")}\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={4} align=\"center\">{t('studentsPage.noStudents')}</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </Paper>\n\n      {selectedStudent && (\n        <EditScheduleModal\n          open={openModal}\n          onClose={() => setOpenModal(false)}\n          student={selectedStudent}\n        />\n      )}\n    </Container>\n  );\n};","\nimport { Chess, Square, Move } from 'chess.js';\n\nexport interface IGameStatus {\n  isCheckmate: boolean;\n  isStalemate: boolean;\n  isThreefoldRepetition: boolean;\n  isInsufficientMaterial: boolean;\n  isDraw: boolean;\n  turn: 'w' | 'b';\n}\n\nexport class ChessGameEngine {\n  private game: Chess;\n  private fullHistory: string[] = []; \n\n  constructor(fen?: string) {\n    this.game = fen ? new Chess(fen) : new Chess();\n    this.fullHistory = this.game.history();\n  }\n\n  getFen(): string {\n    return this.game.fen();\n  }\n\n  getTurn(): 'w' | 'b' {\n    return this.game.turn();\n  }\n\n  getHistory(): string[] {\n    return this.fullHistory;\n  }\n\n  getMovesForSquare(square: Square): Move[] {\n    return this.game.moves({ square, verbose: true });\n  }\n\n  getStatus(): IGameStatus {\n    return {\n      isCheckmate: this.game.isCheckmate(),\n      isStalemate: this.game.isStalemate(),\n      isThreefoldRepetition: this.game.isThreefoldRepetition(),\n      isInsufficientMaterial: this.game.isInsufficientMaterial(),\n      isDraw: this.game.isDraw(),\n      turn: this.game.turn(),\n    };\n  }\n\n  handleMove(source: Square, target: Square): Move | null {\n    try {\n      const move = this.game.move({ from: source, to: target, promotion: 'q' });\n      if (move) {\n        this.fullHistory = this.game.history();\n      }\n      return move;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  resetGame(): void {\n    this.game.reset();\n    this.fullHistory = []; \n  }\n\n  loadPgn(pgn: string): boolean {\n    try {\n      this.game.loadPgn(pgn);\n\n      this.fullHistory = this.game.history(); \n      return true; \n    } catch (e) {\n      console.error(\"Invalid PGN:\", e); \n      return false;\n    }\n  }\n  \n  goToMove(moveIndex: number): void {\n    const tempGame = new Chess();\n    for (let i = 0; i < moveIndex; i++) {\n        if (this.fullHistory[i]) {\n            tempGame.move(this.fullHistory[i]);\n        }\n    }\n    this.game = tempGame;\n  }\n\n  uciToSan(uci: string): string | null {\n    const move = this.game.move({\n      from: uci.substring(0, 2),\n      to: uci.substring(2, 4),\n      promotion: uci.length === 5 ? uci.substring(4) : undefined,\n    });\n    if (move) {\n      this.game.undo();\n      return move.san;\n    }\n    return null;\n  }\n}\n\nexport default ChessGameEngine;","// src/features/Chess/hooks/useChessGame.ts\n\nimport { useState, useMemo, useCallback, useRef } from 'react';\nimport { Square } from 'chess.js';\nimport ChessGameEngine from '../engine/ChessGameEngine';\n\nexport const useChessGame = (initialFen?: string) => {\n    const engine = useMemo(() => new ChessGameEngine(initialFen), [initialFen]);\n\n    const [fen, setFen] = useState(engine.getFen());\n    const [history, setHistory] = useState<string[]>(engine.getHistory());\n    const [currentMoveIndex, setCurrentMoveIndex] = useState(history.length);\n\n    const [selectedSquare, setSelectedSquare] = useState<Square | null>(null);\n    const [moveOptions, setMoveOptions] = useState<{ [key: string]: React.CSSProperties }>({});\n\n    const fenRef = useRef(fen);\n    fenRef.current = fen;\n\n    const updateGameState = useCallback(() => {\n        setFen(engine.getFen());\n        const newHistory = engine.getHistory();\n        setHistory(newHistory);\n        setCurrentMoveIndex(newHistory.length);\n    }, [engine]);\n\n    const clearHighlights = useCallback(() => {\n        setSelectedSquare(null);\n        setMoveOptions({});\n    }, []);\n\n    const handleMove = useCallback((sourceSquare: Square, targetSquare: Square) => {\n        const moveSuccessful = engine.handleMove(sourceSquare, targetSquare);\n        if (moveSuccessful) {\n            updateGameState();\n            clearHighlights();\n            return true;\n        }\n        return false;\n    }, [engine, updateGameState, clearHighlights]);\n\n    const onSquareClick = useCallback((square: Square) => {\n        if (square === selectedSquare) {\n            clearHighlights();\n            return;\n        }\n\n        const moves = engine.getMovesForSquare(square);\n        if (moves.length === 0) {\n            clearHighlights();\n            return;\n        }\n\n        const newOptions: { [key: string]: React.CSSProperties } = {};\n        moves.forEach(move => {\n            newOptions[move.to] = {\n                background: move.flags.includes('c') \n                    ? 'radial-gradient(circle, rgba(0,0,0,0) 85%, rgba(0,0,0,0.2) 85%)'\n                    : 'radial-gradient(circle, rgba(0,0,0,0.2) 25%, transparent 30%)',\n                borderRadius: '50%',\n            };\n        });\n\n        setMoveOptions(newOptions);\n        setSelectedSquare(square);\n    }, [engine, selectedSquare, clearHighlights]);\n\n    const resetGame = useCallback(() => {\n        engine.resetGame();\n        updateGameState();\n        clearHighlights();\n    }, [engine, updateGameState, clearHighlights]);\n\n    const loadPgn = useCallback((pgn: string): boolean => {\n        const success = engine.loadPgn(pgn.trim());\n        if (success) {\n            updateGameState();\n            clearHighlights();\n        }\n        return success;\n    }, [engine, updateGameState, clearHighlights]);\n\n    const goToMove = useCallback((moveIndex: number) => {\n        engine.goToMove(moveIndex);\n        setFen(engine.getFen());\n        setCurrentMoveIndex(moveIndex);\n        clearHighlights();\n    }, [engine, clearHighlights]);\n\n\n    return {\n        fen,\n        history,\n        currentMoveIndex,\n        moveOptions,\n        actions: {\n            handleMove,\n            onSquareClick,\n            resetGame,\n            loadPgn,\n            goToMove,\n        }\n    };\n};","\nimport React from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Square } from 'chess.js';\n\ninterface ChessBoardProps {\n  fen: string;\n  onPieceDrop: (sourceSquare: Square, targetSquare: Square) => boolean;\n  onSquareClick: (square: Square) => void; \n  squareStyles?: { [square: string]: React.CSSProperties }; \n}\n\nexport const ChessBoard: React.FC<ChessBoardProps> = ({ \n  fen, \n  onPieceDrop,\n  onSquareClick,\n  squareStyles  \n}) => {\n  return (\n    <Chessboard\n      position={fen}\n      onPieceDrop={onPieceDrop}\n      onSquareClick={onSquareClick}\n      customSquareStyles={squareStyles}\n      customBoardStyle={{ borderRadius: '4px', boxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)' }}\n      customDarkSquareStyle={{ backgroundColor: '#779952' }}\n      customLightSquareStyle={{ backgroundColor: '#edeed1' }}\n    />\n  );\n};","import React from 'react';\nimport { Paper, Grid, Box, Typography } from '@mui/material';\n\nexport interface AnnotatedMove {\n  san: string;\n  evaluation?: number;\n}\n\ninterface MoveHistoryProps {\n  history: AnnotatedMove[];\n  currentMoveIndex: number;\n  onMoveClick: (moveIndex: number) => void;\n}\n\nconst getEvaluationSymbol = (evaluation?: number): string => {\n  if (evaluation === undefined) return '';\n  const evalAbs = Math.abs(evaluation);\n\n  if (evalAbs < 0.4) return ' =';\n  if (evalAbs < 1.0) return evaluation > 0 ? ' += ' : ' -= ';\n  if (evalAbs < 2.0) return evaluation > 0 ? ' ±' : ' ∓';\n  return evaluation > 0 ? ' +-' : ' -+';\n};\n\nconst getSymbolColor = (evaluation?: number): string => {\n    if (evaluation === undefined) return 'text.secondary';\n    if (Math.abs(evaluation) < 0.4) return 'text.secondary';\n    return evaluation > 0 ? 'success.light' : 'error.light';\n};\n\nexport const MoveHistory: React.FC<MoveHistoryProps> = ({\n  history,\n  currentMoveIndex,\n  onMoveClick,\n}) => {\n  const movePairs = React.useMemo(() => {\n    const pairs: { white: AnnotatedMove; black: AnnotatedMove | null }[] = [];\n    for (let i = 0; i < history.length; i += 2) {\n      pairs.push({ white: history[i], black: history[i + 1] || null });\n    }\n    return pairs;\n  }, [history]);\n\n  return (\n    <Paper variant=\"outlined\" sx={{ p: 1.5, height: '100%', overflowY: 'auto', bgcolor: '#1c1c1c', borderColor: 'rgba(255,255,255,0.2)' }}>\n      <Grid container rowSpacing={0.5} columnSpacing={1} sx={{ fontSize: '1rem', color: 'white' }}>\n        {movePairs.map((pair, index) => {\n          const whiteMoveIndex = index * 2 + 1;\n          const blackMoveIndex = index * 2 + 2;\n\n          return (\n            <React.Fragment key={index}>\n              <Grid item xs={2} sx={{ color: 'rgba(255, 255, 255, 0.6)', textAlign: 'right', pt: '4px' }}>\n                {index + 1}.\n              </Grid>\n              <Grid item xs={5}>\n                <Box\n                  onClick={() => onMoveClick(whiteMoveIndex)}\n                  sx={{ display: 'flex', alignItems: 'center', cursor: 'pointer', p: '2px 5px', borderRadius: '4px', bgcolor: currentMoveIndex === whiteMoveIndex ? 'rgba(255, 215, 0, 0.3)' : 'transparent', '&:hover': { bgcolor: 'rgba(255,255,255,0.1)' } }}\n                >\n                  <Typography component=\"span\">{pair.white.san}</Typography>\n                  <Typography component=\"span\" sx={{ color: getSymbolColor(pair.white.evaluation), fontWeight: 'bold', ml: 0.5 }}>\n                    {getEvaluationSymbol(pair.white.evaluation)}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid item xs={5}>\n                {pair.black && (\n                  <Box\n                    onClick={() => onMoveClick(blackMoveIndex)}\n                    sx={{ display: 'flex', alignItems: 'center', cursor: 'pointer', p: '2px 5px', borderRadius: '4px', bgcolor: currentMoveIndex === blackMoveIndex ? 'rgba(255, 215, 0, 0.3)' : 'transparent', '&:hover': { bgcolor: 'rgba(255,255,255,0.1)' } }}\n                  >\n                    <Typography component=\"span\">{pair.black.san}</Typography>\n                    <Typography component=\"span\" sx={{ color: getSymbolColor(pair.black.evaluation), fontWeight: 'bold', ml: 0.5 }}>\n                        {getEvaluationSymbol(pair.black.evaluation)}\n                    </Typography>\n                  </Box>\n                )}\n              </Grid>\n            </React.Fragment>\n          );\n        })}\n      </Grid>\n    </Paper>\n  );\n};","import React from 'react';\nimport { Paper, Stack, Typography, Divider, Box, Switch, FormControlLabel } from '@mui/material';\n\ninterface AnalysisPanelProps {\n  evaluation: string | null;\n  depth: number;\n  principalVariation: string; // Теперь это будет отформатированная строка SAN\n  isAnalyzing: boolean;\n  isEngineOn: boolean;\n  onToggleEngine: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const AnalysisPanel: React.FC<AnalysisPanelProps> = ({\n  evaluation,\n  depth,\n  principalVariation,\n  isAnalyzing,\n  isEngineOn,\n  onToggleEngine,\n}) => {\n  return (\n    <Paper variant=\"outlined\" sx={{ p: 2, borderColor: 'rgba(255,255,255,0.2)', borderRadius: 2 }}>\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ color: '#FFD700' }}>\n          {evaluation ?? <Typography component=\"span\" color=\"text.secondary\">...</Typography>}\n        </Typography>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n          <Stack alignItems=\"flex-end\">\n            <Typography variant=\"body2\" color=\"text.secondary\">Depth: {depth}</Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">SF 16</Typography>\n          </Stack>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isEngineOn}\n                onChange={onToggleEngine}\n                sx={{\n                  '& .MuiSwitch-switchBase.Mui-checked': {\n                    color: '#FFD700',\n                  },\n                  '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n                    backgroundColor: '#FFD700',\n                  },\n                }}\n              />\n            }\n            label=\"\"\n            sx={{ mr: 0 }}\n          />\n        </Stack>\n      </Stack>\n      <Divider sx={{ my: 1, borderColor: 'rgba(255,255,255,0.2)' }} />\n      <Box sx={{ minHeight: '4em', overflowX: 'auto', whiteSpace: 'nowrap' }}>\n        <Typography variant=\"body1\">\n          {principalVariation || (isAnalyzing ? 'Analyzing...' : <Typography component=\"span\" color=\"text.secondary\">-</Typography>)}\n        </Typography>\n      </Box>\n    </Paper>\n  );\n};","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Chess, Square } from 'chess.js';\nimport { Container, Typography, Grid, Box, Paper, Stack, TextField, Button, IconButton } from '@mui/material';\nimport { notification } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\n// Импорт хука и компонентов\nimport { useChessGame } from '../hooks/useChessGame';\nimport { ChessBoard } from '../components/ChessBoard';\nimport { MoveHistory, AnnotatedMove } from '../components/MoveHistory';\nimport { AnalysisPanel } from '../components/AnalysisPanel';\n\n// Иконки\nimport ReplayIcon from '@mui/icons-material/Replay';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\nimport ArrowLeftIcon from '@mui/icons-material/ArrowLeft';\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\n\nexport const AnalysisPage: React.FC = () => {\n    const { t } = useTranslation();\n    const { fen, history, currentMoveIndex, moveOptions, actions } = useChessGame();\n\n    // Состояния для анализа\n    const [annotatedHistory, setAnnotatedHistory] = useState<AnnotatedMove[]>([]);\n    const [inputPgn, setInputPgn] = useState('');\n    const [engineWorker, setEngineWorker] = useState<Worker | null>(null);\n    const [isLiveAnalyzing, setIsLiveAnalyzing] = useState(false);\n    const [liveEvaluation, setLiveEvaluation] = useState<string | null>(null);\n    const [liveDepth, setLiveDepth] = useState(0);\n    const [livePV, setLivePV] = useState(''); // Теперь это будет отформатированная SAN-строка\n    const [isEngineOn, setIsEngineOn] = useState(false);\n\n    const fenRef = useRef(fen);\n    useEffect(() => { fenRef.current = fen; }, [fen]);\n\n    useEffect(() => {\n        setAnnotatedHistory(history.map(san => ({ san })));\n    }, [history]);\n    \n    // --- Функции-обертки для действий из хука ---\n    const resetAnalysisData = () => {\n        setLiveEvaluation(null);\n        setLiveDepth(0);\n        setLivePV('');\n    };\n\n    const handleLoadPgn = () => {\n        if (actions.loadPgn(inputPgn)) {\n            resetAnalysisData();\n            notification.success({\n                message: t('chessGame.pgnLoadSuccess'),\n                description: undefined\n            });\n        } else {\n            notification.error({\n                message: t('chessGame.pgnLoadError'),\n                description: undefined\n            });\n        }\n    };\n    \n    const handleResetGame = () => {\n        actions.resetGame();\n        resetAnalysisData();\n        notification.success({\n            message: t('chessGame.resetSuccess'),\n            description: undefined\n        });\n    };\n\n    const handleGoToMove = (moveIndex: number) => {\n        actions.goToMove(moveIndex);\n        resetAnalysisData();\n    };\n\n    // --- Логика анализа ---\n\n    const liveAnalyzePosition = useCallback(() => {\n        if (engineWorker && !isLiveAnalyzing) {\n            setIsLiveAnalyzing(true);\n            resetAnalysisData();\n            engineWorker.postMessage(`position fen ${fen}`);\n            engineWorker.postMessage('go depth 18');\n        }\n    }, [engineWorker, fen, isLiveAnalyzing]);\n\n    useEffect(() => {\n        if (isEngineOn) {\n            liveAnalyzePosition();\n        } else if (engineWorker) {\n            engineWorker.postMessage('stop');\n            setIsLiveAnalyzing(false);\n        }\n    }, [fen, isEngineOn, liveAnalyzePosition, engineWorker]);\n    \n    const handleToggleEngine = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setIsEngineOn(event.target.checked);\n    };\n\n    // ВОЗВРАЩАЕМ ЭТУ ФУНКЦИЮ\n    const formatUCIToSAN = useCallback((uciLine: string, startFen: string) => {\n        try {\n            const tempGame = new Chess(startFen);\n            const moves = uciLine.split(' ');\n            let sanLine = '';\n            for (const uci of moves) {\n                const moveResult = tempGame.move({ from: uci.substring(0, 2) as Square, to: uci.substring(2, 4) as Square, promotion: uci.length === 5 ? uci.substring(4) : undefined });\n                if (moveResult) {\n                    if (tempGame.turn() === 'b') { // Ход только что сделали белые\n                        sanLine += `${tempGame.moveNumber()}. ${moveResult.san} `;\n                    } else {\n                        sanLine += `${moveResult.san} `;\n                    }\n                } else { break; }\n            }\n            return sanLine.trim();\n        } catch (e) { return uciLine; }\n    }, []);\n\n    useEffect(() => {\n        const worker = new Worker('/workers/stockfish.js');\n        setEngineWorker(worker);\n        worker.postMessage('uci');\n\n        worker.onmessage = (event) => {\n            const message = event.data as string;\n            if (message === 'uciok') return;\n\n            if (message.startsWith('info depth')) {\n                const depthMatch = message.match(/depth (\\d+)/);\n                const scoreMatch = message.match(/score (cp|mate) (-?\\d+)/);\n                const pvMatch = message.match(/ pv (.+)/);\n                if (depthMatch) setLiveDepth(parseInt(depthMatch[1], 10));\n                if (scoreMatch) {\n                    const turn = new Chess(fenRef.current).turn();\n                    const type = scoreMatch[1];\n                    let value = parseInt(scoreMatch[2], 10);\n                    if (turn === 'b') value *= -1;\n                    const evalString = type === 'cp' ? (value / 100).toFixed(2) : `M${Math.abs(value)}`;\n                    setLiveEvaluation(evalString);\n                }\n                if (pvMatch) {\n                    // Используем formatUCIToSAN для преобразования\n                    const formattedPV = formatUCIToSAN(pvMatch[1], fenRef.current);\n                    setLivePV(formattedPV);\n                }\n            }\n            if (message.startsWith('bestmove')) { setIsLiveAnalyzing(false); }\n        };\n\n        return () => worker.terminate();\n    }, [formatUCIToSAN]);\n\n    return (\n        <Box sx={{ bgcolor: '#0e0e0e', color: 'white', minHeight: '100vh', py: { xs: 2, md: 5 } }}>\n            <Container maxWidth=\"xl\">\n                <Box sx={{ textAlign: 'center', mb: 4 }}>\n                    <Typography variant=\"h2\" component=\"h1\" fontWeight=\"bold\">{t('chessGame.title')}</Typography>\n                    <Typography variant=\"h6\" sx={{ mt: 1, color: 'rgba(255, 255, 255, 0.7)' }}>{t('chessGame.subtitle')}</Typography>\n                </Box>\n                <Grid container spacing={4}>\n                    <Grid item xs={12} md={7}>\n                        <Paper sx={{ p: 2, bgcolor: '#1c1c1c', borderRadius: 4, aspectRatio: '1 / 1', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            <ChessBoard\n                                fen={fen}\n                                onPieceDrop={actions.handleMove}\n                                onSquareClick={actions.onSquareClick}\n                                squareStyles={moveOptions}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Paper sx={{ p: 2, bgcolor: '#1c1c1c', borderRadius: 4, height: '100%' }}>\n                            <Stack spacing={2} height=\"100%\">\n                                <AnalysisPanel\n                                  evaluation={liveEvaluation}\n                                  depth={liveDepth}\n                                  principalVariation={livePV}\n                                  isAnalyzing={isLiveAnalyzing}\n                                  isEngineOn={isEngineOn}\n                                  onToggleEngine={handleToggleEngine}\n                                />\n                                <Box sx={{ flexGrow: 1, height: '250px' }}>\n                                    <MoveHistory history={annotatedHistory} currentMoveIndex={currentMoveIndex} onMoveClick={handleGoToMove} />\n                                </Box>\n                                <Stack direction=\"row\" spacing={1} justifyContent=\"center\" alignItems=\"center\">\n                                    <IconButton onClick={() => handleGoToMove(0)} disabled={currentMoveIndex === 0}><SkipPreviousIcon /></IconButton>\n                                    <IconButton onClick={() => handleGoToMove(currentMoveIndex - 1)} disabled={currentMoveIndex === 0}><ArrowLeftIcon /></IconButton>\n                                    <IconButton onClick={() => handleGoToMove(currentMoveIndex + 1)} disabled={currentMoveIndex === history.length}><ArrowRightIcon /></IconButton>\n                                    <IconButton onClick={() => handleGoToMove(history.length)} disabled={currentMoveIndex === history.length}><SkipNextIcon /></IconButton>\n                                </Stack>\n                                <Stack spacing={1}>\n                                    <TextField label={t('chessGame.pgnInputLabel')} fullWidth multiline rows={2} variant=\"filled\" value={inputPgn} onChange={(e) => setInputPgn(e.target.value)} sx={{ '& .MuiFilledInput-root': { backgroundColor: 'rgba(255,255,255,0.1)' } }} />\n                                    <Stack direction=\"row\" spacing={1}>\n                                        <Button variant=\"outlined\" onClick={handleResetGame} startIcon={<ReplayIcon />} fullWidth>{t('chessGame.reset')}</Button>\n                                        <Button variant=\"outlined\" onClick={handleLoadPgn} startIcon={<UploadFileIcon />} fullWidth>{t('chessGame.loadPgn')}</Button>\n                                    </Stack>\n                                </Stack>\n                            </Stack>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box>\n    );\n};","import { Square } from 'chess.js';\nimport React from 'react';\nimport { Chessboard } from 'react-chessboard';\n\ninterface ChessBoardProps {\n  position: string;\n  onMove?: (source: Square, target: Square) => boolean;\n  onSquareClick?: (square: Square) => void;\n  boardWidth?: number;\n}\n\nconst ChessBoard: React.FC<ChessBoardProps> = ({ position, onMove, onSquareClick, boardWidth = 500 }) => {\n  return (\n    <Chessboard\n      position={position}\n      boardWidth={boardWidth}\n      onPieceDrop={onMove ? (source, target) => onMove(source, target) : undefined}\n      onSquareClick={onSquareClick}\n    />\n  );\n};\n\nexport default ChessBoard;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Chess, Square, PieceSymbol, Color } from 'chess.js';\nimport {\n  Checkbox,\n  Container,\n  Stack,\n  Button,\n  TextField,\n  Typography,\n  Box,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  FormGroup,\n  Paper,\n} from '@mui/material';\nimport { notification } from 'antd';\nimport ChessBoard from '../ChessGame/ChessBoard';\n\ninterface PuzzleEditorProps {\n  initialFen?: string;\n}\n\nconst PuzzleEditor: React.FC<PuzzleEditorProps> = ({ initialFen }) => {\n  const defaultFen = initialFen || '8/8/8/8/8/8/8/8 w - - 0 1';\n  const [isCursorOnBoard, setIsCursorOnBoard] = useState(false);\n  const [chess] = useState(() => {\n    const instance = new Chess();\n    instance.clear();\n    return instance;\n  });\n  const [fen, setFen] = useState(defaultFen);\n  const [draggedPiece, setDraggedPiece] = useState<{\n    icon: string;\n    type: PieceSymbol;\n    color: Color;\n  } | null>(null);\n  const [cursorStyle, setCursorStyle] = useState<React.CSSProperties | null>(null);\n\n  const pieces: { type: PieceSymbol; color: Color; icon: string }[] = [\n    { type: 'k', color: 'b', icon: '♚' },\n    { type: 'q', color: 'b', icon: '♛' },\n    { type: 'r', color: 'b', icon: '♜' },\n    { type: 'b', color: 'b', icon: '♝' },\n    { type: 'n', color: 'b', icon: '♞' },\n    { type: 'p', color: 'b', icon: '♟' },\n    { type: 'k', color: 'w', icon: '♔' },\n    { type: 'q', color: 'w', icon: '♕' },\n    { type: 'r', color: 'w', icon: '♖' },\n    { type: 'b', color: 'w', icon: '♗' },\n    { type: 'n', color: 'w', icon: '♘' },\n    { type: 'p', color: 'w', icon: '♙' },\n  ];\n\n  const boardRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!draggedPiece || !isCursorOnBoard || !boardRef.current) return;\n  \n      const rect = boardRef.current.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n  \n      if (x >= 0 && y >= 0 && x <= rect.width && y <= rect.height) {\n        setCursorStyle({\n          left: x,\n          top: y,\n        });\n      }\n    };\n  \n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, [draggedPiece, isCursorOnBoard]);\n  \n  \n\n  const updateCastlingRights = (\n    _rights: string,\n    checked: boolean,\n    flag: 'K' | 'Q' | 'k' | 'q'\n  ) => {\n    let parts = fen.split(' ');\n    let castling = parts[2] === '-' ? '' : parts[2];\n    if (checked) {\n      castling = (castling + flag).split('').sort().join('');\n    } else {\n      castling = castling.replace(flag, '');\n    }\n    parts[2] = castling || '-';\n    const updatedFen = parts.join(' ');\n    try {\n      chess.load(updatedFen);\n      setFen(updatedFen);\n    } catch {\n      notification.error({\n        message: 'Ошибка рокировки',\n        description: undefined\n      });\n    }\n  };\n\n  const handleSquareClick = (square: Square) => {\n    const [file, rank] = [square.charCodeAt(0) - 97, 8 - parseInt(square[1])];\n    const board = chess.board();\n    const existingPiece = board[rank][file];\n  \n    if (draggedPiece) {\n      // если фигура уже стоит там — удалим её\n      if (\n        existingPiece &&\n        existingPiece.type === draggedPiece.type &&\n        existingPiece.color === draggedPiece.color\n      ) {\n        chess.remove(square);\n      } else {\n        chess.put(draggedPiece, square);\n      }\n      setFen(chess.fen());\n      return;\n    }\n  \n    if (existingPiece) {\n      chess.remove(square);\n      setFen(chess.fen());\n    }\n  };\n  \n\n  const clearBoard = () => {\n    chess.clear();\n    setFen(chess.fen());\n    notification.success({\n      message: 'Доска очищена!',\n      description: undefined\n    });\n  };\n\n  const setInitialPosition = () => {\n    chess.reset();\n    setFen(chess.fen());\n    notification.success({\n      message: 'Установлена начальная позиция!',\n      description: undefined\n    });\n  };\n\n  const removeDraggedPiece = () => {\n    setDraggedPiece(null);\n    setCursorStyle(null);\n  };\n\n  const savePosition = () => {\n    const kingCount = fen.split('').filter((char) => char.toLowerCase() === 'k').length;\n    if (kingCount < 2) {\n      notification.error({\n        message: 'Некорректная позиция',\n        description: 'На доске должно быть как минимум два короля.',\n      });\n      return;\n    }\n\n    try {\n      chess.load(fen);\n      notification.success({ message: 'Позиция сохранена', description: `FEN: ${fen}` });\n    } catch (error) {\n      notification.error({\n        message: 'Ошибка сохранения',\n        description: 'Некорректная FEN-позиция',\n      });\n    }\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" gutterBottom>\n        Редактор шахматной позиции\n      </Typography>\n\n      <Box display=\"flex\">\n      <Box\n  onMouseEnter={() => setIsCursorOnBoard(true)}\n  onMouseLeave={() => setIsCursorOnBoard(false)}\n  style={{\n    cursor: draggedPiece ? 'none' : 'default',\n    position: 'relative',\n    width: 500, // такой же как boardWidth\n    height: 500,\n  }}\n>\n  <ChessBoard\n    position={fen}\n    onSquareClick={handleSquareClick}\n    boardWidth={500}\n  />\n  {cursorStyle && draggedPiece && (\n    <div\n      style={{\n        ...cursorStyle,\n        position: 'absolute',\n        pointerEvents: 'none',\n        left: cursorStyle.left,\n        top: cursorStyle.top,\n        fontSize: '32px',\n        zIndex: 1000,\n      }}\n    >\n      {draggedPiece.icon}\n    </div>\n  )}\n</Box>\n\n\n        <Box ml={3} display=\"flex\" flexDirection=\"column\">\n          <Paper elevation={3} style={{ padding: '10px', marginBottom: '20px' }}>\n            <Typography variant=\"h6\" gutterBottom>Фигуры</Typography>\n            <Box display=\"grid\" gridTemplateColumns=\"repeat(2, 1fr)\" gap={1}>\n              {pieces.map((piece, idx) => (\n                <Box\n                  key={idx}\n                  onClick={() => setDraggedPiece(piece)}\n                  style={{\n                    textAlign: 'center',\n                    cursor: 'pointer',\n                    padding: 6,\n                    border: '1px solid #aaa',\n                    borderRadius: 4,\n                    fontSize: 24,\n                    backgroundColor: draggedPiece === piece ? '#1976d2' : '#f5f5f5',\n                    color: draggedPiece === piece ? '#fff' : 'inherit',\n                  }}\n                >\n                  {piece.icon}\n                </Box>\n              ))}\n            </Box>\n          </Paper>\n\n          <Paper elevation={3} style={{ padding: '10px', marginBottom: '20px' }}>\n            <Typography variant=\"h6\">Рокировка</Typography>\n            <FormGroup row>\n              <FormControlLabel\n                control={<Checkbox checked={fen.includes('K')} onChange={(e) => updateCastlingRights(fen, e.target.checked, 'K')} />}\n                label=\"Белые 0-0\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={fen.includes('Q')} onChange={(e) => updateCastlingRights(fen, e.target.checked, 'Q')} />}\n                label=\"Белые 0-0-0\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={fen.includes('k')} onChange={(e) => updateCastlingRights(fen, e.target.checked, 'k')} />}\n                label=\"Чёрные 0-0\"\n              />\n              <FormControlLabel\n                control={<Checkbox checked={fen.includes('q')} onChange={(e) => updateCastlingRights(fen, e.target.checked, 'q')} />}\n                label=\"Чёрные 0-0-0\"\n              />\n            </FormGroup>\n          </Paper>\n\n          <Paper elevation={3} style={{ padding: '10px' }}>\n            <Typography variant=\"h6\">Ход</Typography>\n            <RadioGroup\n              row\n              value={chess.turn()}\n              onChange={(e) => {\n                const newFen = fen.split(' ');\n                newFen[1] = e.target.value;\n                const updatedFen = newFen.join(' ');\n                try {\n                  chess.load(updatedFen);\n                  setFen(updatedFen);\n                } catch {\n                  notification.error({\n                    message: 'Ошибка изменения хода',\n                    description: undefined\n                  });\n                }\n              }}\n            >\n              <FormControlLabel value=\"w\" control={<Radio />} label=\"Белые\" />\n              <FormControlLabel value=\"b\" control={<Radio />} label=\"Чёрные\" />\n            </RadioGroup>\n          </Paper>\n        </Box>\n      </Box>\n\n      <Stack direction=\"row\" spacing={2} mt={3}>\n        <Button variant=\"contained\" onClick={clearBoard}>Очистить доску</Button>\n        <Button variant=\"contained\" onClick={setInitialPosition}>Начальная позиция</Button>\n        <Button variant=\"contained\" onClick={removeDraggedPiece}>Убрать фигуру</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={savePosition}>Сохранить</Button>\n      </Stack>\n\n      <TextField\n        label=\"FEN\"\n        value={fen}\n        fullWidth\n        multiline\n        rows={2}\n        onChange={(e) => {\n          const newFen = e.target.value;\n          try {\n            chess.load(newFen);\n            setFen(newFen);\n          } catch {\n            notification.error({\n              message: 'Некорректный FEN',\n              description: undefined\n            });\n          }\n        }}\n        style={{ marginTop: 20 }}\n      />\n\n      {cursorStyle && draggedPiece && (\n        <div style={cursorStyle}>{draggedPiece.icon}</div>\n      )}\n    </Container>\n  );\n};\n\nexport default PuzzleEditor;\n","import axiosInstance from '@/api';\n\nexport const checkVerificationStatus = async (email: string): Promise<{ emailVerified: boolean }> => {\n  const response = await axiosInstance.get('/auth/check-verification', {\n    params: { email }, \n  });\n  return response.data;\n};","import axiosInstance from '@/api';\n\nexport const resendVerificationEmail = async (email: string): Promise<{ msg: string }> => {\n  const response = await axiosInstance.post('/auth/resend-verification', { email });\n  return response.data;\n};","import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Typography, Button, Box, CircularProgress } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nimport { checkVerificationStatus, resendVerificationEmail } from '@/api/email-verify';\n\nexport const VerifyEmailPage: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { t } = useTranslation();\n  \n  const { firstName, lastName, email } = location.state || {};\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isPolling, setIsPolling] = useState(true); \n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [resendDisabled, setResendDisabled] = useState(false);\n\n  const intervalIdRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    if (!email) {\n      console.error(\"Email not found in location state. Redirecting to register.\");\n      navigate('/register');\n      return;\n    }\n    \n    intervalIdRef.current = setInterval(async () => {\n      try {\n        const { emailVerified } = await checkVerificationStatus(email);\n        if (emailVerified) {\n          setIsPolling(false);\n          navigate('/login', { state: { message: t('verifyEmail.verifiedAndReadyToLogin') } });\n        }\n      } catch (error) {\n        console.error('Polling error:', error);\n      }\n    }, 5000);\n\n    return () => {\n      if (intervalIdRef.current) {\n        clearInterval(intervalIdRef.current);\n      }\n    };\n  }, [email, navigate, t]);\n\n  const handleResendEmail = async () => {\n    if (!email) return;\n\n    setIsLoading(true);\n    setSuccessMessage(null);\n    setErrorMessage(null);\n    try {\n      await resendVerificationEmail(email); \n\n      setSuccessMessage(t('verifyEmail.resendSuccess'));\n      setResendDisabled(true);\n      setTimeout(() => setResendDisabled(false), 120000); \n    } catch (error: any) {\n      if (error.response?.status === 429) {\n        setErrorMessage(t('verifyEmail.resendErrorTooMany'));\n      } else {\n        setErrorMessage(t('verifyEmail.resendError'));\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  return (\n    <Box textAlign=\"center\" mt={5} p={2}>\n      {isPolling && <CircularProgress sx={{ mb: 2 }} />}\n      <Typography variant=\"h4\" gutterBottom>\n        {t('verifyEmail.pageTitle')}\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        <b>{t('verifyEmail.greeting', { firstName: firstName || '', lastName: lastName || '' })}</b>\n      </Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        {t('verifyEmail.sentTo', { email: email || t('verifyEmail.yourEmail') })}\n      </Typography>\n      <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2, maxWidth: '600px', mx: 'auto' }}>\n        {t('verifyEmail.instruction')}\n      </Typography>\n\n      {successMessage && !errorMessage && (\n        <Typography variant=\"body2\" color=\"primary.main\" sx={{ mt: 2, fontWeight: 'bold' }}>\n          {successMessage}\n        </Typography>\n      )}\n\n      {errorMessage && (\n        <Typography variant=\"body2\" color=\"error\" sx={{ mt: 2, fontWeight: 'bold' }}>\n          {errorMessage}\n        </Typography>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleResendEmail}\n        disabled={resendDisabled || isLoading}\n        sx={{ mt: 3, mb: 2 }}\n      >\n        {isLoading ? t('verifyEmail.sending') : t('verifyEmail.resendButton')}\n      </Button>\n      \n      <Typography variant=\"caption\" display=\"block\">\n        {t('verifyEmail.didNotReceive')}\n      </Typography>\n    </Box>\n  );\n};","import axiosInstance from '@/api'; \n\nexport const fetchRequests = async () => {\n  const response = await axiosInstance.get('/trainer/requests', {\n  });\n  return response.data;\n};\n\n","import axiosInstance from '@/api'; \n\nexport const handleRequest = async (requestId: string, status: 'approved' | 'rejected') => {\n    await axiosInstance.patch(\n      `/trainer/request?request_id=${requestId}`,\n      { status },\n    );\n  };","import axiosInstance from '@/api'; \n\nexport const createRequest = async (coachId: string, experience: string, goals: string) => {\n  const response = await axiosInstance.post(\n      '/trainer/request', \n      {\n        coachId,\n        experience,\n        goals,\n      }\n    );\n    return response.data;\n};","import React, { useState, useEffect } from 'react';\nimport {\n  Container, Typography, Grid, Card, CardContent, Button, Dialog, DialogTitle,\n  DialogContent, DialogActions, TextField, Select, MenuItem, InputLabel,\n  FormControl, Divider, Box, Stack, Chip, Avatar, IconButton, InputAdornment, Paper,\n  CardMedia\n} from '@mui/material';\nimport { getCoaches } from '@/api/coaches';\nimport { notification } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { createRequest } from '@/api/requests';\n\n// Icons\nimport WorkHistoryIcon from '@mui/icons-material/WorkHistory';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SendIcon from '@mui/icons-material/Send';\nimport SearchIcon from '@mui/icons-material/Search';\n\ninterface Coach {\n  _id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  photoUrl?: string;\n  coachProfile?: {\n    title?: string;\n    experience?: string;\n    bio?: string;\n    price?: number;\n    services?: string[];\n  };\n}\n\n// Helper for styling form inputs\nconst formInputStyles = {\n  '& .MuiInputBase-root': {\n    backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    '&:hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.12)',\n    }\n  },\n  '& .MuiInputLabel-root': {\n    color: 'rgba(255, 255, 255, 0.6)'\n  },\n  '& .MuiInputBase-input': {\n    color: 'white'\n  },\n   '& .MuiSelect-icon': {\n    color: 'rgba(255, 255, 255, 0.6)'\n  }\n};\n\n\nexport const CoachesPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [coaches, setCoaches] = useState<Coach[]>([]);\n  const [selectedCoach, setSelectedCoach] = useState<Coach | null>(null);\n  const [filter, setFilter] = useState('');\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  const currentUserEmail = localStorage.getItem('email');\n\n  const [formValues, setFormValues] = useState({\n    userName: '',\n    userEmail: '',\n    experienceLevel: 'Intermediate', // Using a key for state\n    goals: '',\n  });\n\n  const [editProfile, setEditProfile] = useState({\n    title: '',\n    experience: '',\n    bio: '',\n    price: '',\n    services: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getCoaches();\n        setCoaches(data);\n      } catch (error) {\n        notification.error({\n          message: t('coaches.fetchError'),\n          description: undefined\n        });\n      }\n    };\n    fetchData();\n  }, [t]);\n\n  const handleOpenDialog = (coach: Coach) => {\n    setSelectedCoach(coach);\n    setIsDialogOpen(true);\n    setShowForm(false);\n    setIsEditMode(false);\n\n    setEditProfile({\n      title: coach.coachProfile?.title || '',\n      experience: coach.coachProfile?.experience || '',\n      bio: coach.coachProfile?.bio || '',\n      price: coach.coachProfile?.price?.toString() || '',\n      services: (coach.coachProfile?.services || []).join(', '),\n    });\n  };\n\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n    setTimeout(() => {\n      setSelectedCoach(null);\n      setShowForm(false);\n      setIsEditMode(false);\n      setFormValues({ userName: '', userEmail: '', experienceLevel: 'Intermediate', goals: '' });\n    }, 300);\n  };\n\n  const handleSendRequest = async () => {\n    if (!selectedCoach) return;\n    \n    try {\n      setIsLoading(true);\n      await createRequest(selectedCoach._id, formValues.experienceLevel, formValues.goals);\n      notification.success({\n        message: t('coaches.successMessage'),\n        description: undefined\n      });\n      handleCloseDialog();\n    } catch (error) {\n      notification.error({\n        message: t('coaches.submitError'),\n        description: undefined\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSaveEdit = async () => {\n    console.log(\"Saving profile:\", editProfile);\n    notification.success({\n      message: t('coaches.updated'),\n      description: undefined\n    });\n    handleCloseDialog();\n  };\n\n  const filteredCoaches = coaches.filter((c) =>\n    `${c.firstName} ${c.lastName}`.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const coachName = selectedCoach ? `${selectedCoach.firstName} ${selectedCoach.lastName}` : '';\n  \n  return (\n    <Box sx={{ bgcolor: '#0e0e0e', color: 'white', minHeight: '100vh', py: 8 }}>\n      <Container maxWidth=\"lg\">\n        <Box sx={{ textAlign: 'center', mb: 8 }}>\n          <Typography variant=\"h2\" component=\"h1\" fontWeight=\"bold\">{t('coaches.title')}</Typography>\n          <Typography variant=\"h6\" sx={{ mt: 1, color: 'rgba(255, 255, 255, 0.7)' }}>\n            {t('coaches.subtitle')}\n          </Typography>\n        </Box>\n\n        <Box sx={{ mb: 5, maxWidth: '600px', mx: 'auto' }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder={t('coaches.searchByName')}\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                borderRadius: '30px',\n                backgroundColor: '#1c1c1c',\n                '& fieldset': { borderColor: 'rgba(255, 255, 255, 0.2)' },\n                '&:hover fieldset': { borderColor: '#FFD700' },\n                '&.Mui-focused fieldset': { borderColor: '#FFD700' },\n              },\n              '& .MuiInputBase-input': { color: 'white' },\n            }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon sx={{ color: 'rgba(255, 255, 255, 0.5)' }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n\n        <Grid container spacing={4}>\n          {filteredCoaches.map((coach) => (\n            <Grid item xs={12} sm={6} md={4} key={coach._id}>\n              <Card sx={{\n                bgcolor: '#1c1c1c',\n                color: 'white',\n                borderRadius: 4,\n                height: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                transition: 'transform 0.3s ease, box-shadow 0.3s ease',\n                '&:hover': {\n                  transform: 'translateY(-8px)',\n                  boxShadow: '0 12px 24px rgba(255, 215, 0, 0.2)'\n                }\n              }}>\n                <CardMedia\n                  component=\"img\"\n                  height=\"250\"\n                  image={coach.photoUrl || '/images/default-avatar.png'}\n                  alt={`${coach.firstName} ${coach.lastName}`}\n                />\n                <CardContent sx={{ flexGrow: 1 }}>\n                  <Typography variant=\"h5\" component=\"div\" fontWeight=\"bold\">\n                    {coach.firstName} {coach.lastName}\n                  </Typography>\n                  <Typography variant=\"body1\" sx={{ color: '#FFD700', mb: 2 }}>\n                    {coach.coachProfile?.title || 'Chess Master'}\n                  </Typography>\n                  <Stack spacing={1}>\n                    <Box sx={{ display: 'flex', alignItems: 'center', color: 'rgba(255,255,255,0.7)' }}>\n                      <WorkHistoryIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                      <Typography variant=\"body2\">{coach.coachProfile?.experience || 'N/A'}</Typography>\n                    </Box>\n                    <Box sx={{ display: 'flex', alignItems: 'center', color: 'rgba(255,255,255,0.7)' }}>\n                      <AttachMoneyIcon fontSize=\"small\" sx={{ mr: 1 }} />\n                      <Typography variant=\"body2\">{coach.coachProfile?.price ? `${coach.coachProfile.price}$ / hour` : 'Contact for price'}</Typography>\n                    </Box>\n                  </Stack>\n                </CardContent>\n                <Box sx={{ p: 2, pt: 0 }}>\n                  <Button\n                    variant=\"contained\"\n                    fullWidth\n                    onClick={() => handleOpenDialog(coach)}\n                    sx={{ \n                      backgroundColor: '#FFD700', color: 'black', fontWeight: 'bold', borderRadius: '20px',\n                      '&:hover': { backgroundColor: '#FFC107' }\n                    }}\n                  >\n                    {t('coaches.viewProfile')}\n                  </Button>\n                </Box>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n\n        {/* --- DIALOG MODAL - KEY CHANGES BELOW --- */}\n        <Dialog open={isDialogOpen} onClose={handleCloseDialog} fullWidth maxWidth=\"md\" PaperProps={{\n          sx: { bgcolor: '#1c1c1c', color: 'white', borderRadius: 4, backgroundImage: 'none' }\n        }}>\n          {selectedCoach && ( // Ensure selectedCoach exists before rendering\n          <>\n            <DialogTitle sx={{ p: 3, pb: 1 }}>\n              <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n                <Typography variant=\"h5\" fontWeight=\"bold\">\n                  {isEditMode ? t('coaches.editProfile') : t('coaches.profileOf', { coachName })}\n                </Typography>\n                <IconButton onClick={handleCloseDialog} sx={{ color: 'rgba(255,255,255,0.7)' }}>\n                  <CloseIcon />\n                </IconButton>\n              </Stack>\n            </DialogTitle>\n            <DialogContent>\n              {isEditMode ? (\n                <Stack spacing={2} sx={{ pt: 1 }}>\n                  {/* Edit form remains the same */}\n                </Stack>\n              ) : (\n                <>\n                  <Grid container spacing={4} sx={{ pt: 1 }}>\n                    <Grid item xs={12} md={4}>\n                      <Avatar src={selectedCoach.photoUrl || '/images/default-avatar.png'} sx={{ width: '100%', height: 'auto', aspectRatio: '1 / 1', borderRadius: 3 }} variant=\"rounded\" />\n                    </Grid>\n                    <Grid item xs={12} md={8}>\n                      <Stack spacing={2.5}>\n                        <Box>\n                          <Typography fontWeight=\"bold\" color=\"#FFD700\">{t('coaches.bio')}</Typography>\n                          <Typography sx={{ color: 'rgba(255,255,255,0.8)', whiteSpace: 'pre-wrap' }}>\n                            {selectedCoach.coachProfile?.bio || <span style={{ color: 'rgba(255,255,255,0.5)', fontStyle: 'italic' }}>No bio provided.</span>}\n                          </Typography>\n                        </Box>\n                        <Box>\n                          <Typography fontWeight=\"bold\" color=\"#FFD700\">{t('coaches.services')}</Typography>\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                            {selectedCoach.coachProfile?.services?.length ? selectedCoach.coachProfile.services.map(s => <Chip key={s} label={s} sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}/>) : <Typography sx={{ color: 'rgba(255,255,255,0.5)', fontStyle: 'italic' }}>No services listed.</Typography>}\n                          </Box>\n                        </Box>\n                      </Stack>\n                    </Grid>\n                  </Grid>\n\n                  <Divider sx={{ my: 3, borderColor: 'rgba(255,255,255,0.2)' }} />\n                  \n                  <Box>\n                    {!showForm ? (\n                      <Button fullWidth variant=\"outlined\" onClick={() => setShowForm(true)} sx={{ color: '#FFD700', borderColor: '#FFD700', '&:hover': { borderColor: '#FFC107', bgcolor: 'rgba(255, 215, 0, 0.1)' }}}>\n                        {t('coaches.requestTitle', { coachName: selectedCoach.firstName })}\n                      </Button>\n                    ) : (\n                      <Paper elevation={0} sx={{ p: {xs: 2, sm: 3}, bgcolor: 'rgba(0,0,0,0.25)', borderRadius: 2 }}>\n                        <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ mb: 2 }}>\n                          {t('coaches.requestTitle', { coachName })}\n                        </Typography>\n                        <Stack spacing={2}>\n                          <TextField fullWidth label={t('coaches.yourName')} value={formValues.userName} onChange={(e) => setFormValues({ ...formValues, userName: e.target.value })} variant=\"filled\" sx={formInputStyles} />\n                          <TextField fullWidth label={t('coaches.yourEmail')} value={formValues.userEmail} onChange={(e) => setFormValues({ ...formValues, userEmail: e.target.value })} variant=\"filled\" sx={formInputStyles} />\n                          <FormControl fullWidth variant=\"filled\" sx={formInputStyles}>\n                            <InputLabel id=\"level-select-label\">{t('coaches.level')}</InputLabel>\n                            <Select\n                              labelId=\"level-select-label\"\n                              value={formValues.experienceLevel}\n                              onChange={(e) => setFormValues({ ...formValues, experienceLevel: e.target.value })}\n                            >\n                              <MenuItem value=\"Beginner\">{t('coaches.levelBeginner')}</MenuItem>\n                              <MenuItem value=\"Intermediate\">{t('coaches.levelIntermediate')}</MenuItem>\n                              <MenuItem value=\"Advanced\">{t('coaches.levelAdvanced')}</MenuItem>\n                            </Select>\n                          </FormControl>\n                          <TextField fullWidth multiline rows={3} label={t('coaches.goals')} value={formValues.goals} onChange={(e) => setFormValues({ ...formValues, goals: e.target.value })} variant=\"filled\" sx={formInputStyles} />\n                        </Stack>\n                      </Paper>\n                    )}\n                  </Box>\n                </>\n              )}\n            </DialogContent>\n            <DialogActions sx={{ p: 3, pt: 2 }}>\n              {isEditMode ? (\n                <>\n                  <Button onClick={() => setIsEditMode(false)} sx={{ color: 'rgba(255,255,255,0.7)' }}>{t('coaches.cancel')}</Button>\n                  <Button variant=\"contained\" onClick={handleSaveEdit} startIcon={<EditIcon />} sx={{ bgcolor: '#FFD700', color: 'black', '&:hover': { bgcolor: '#FFC107' } }}>{t('coaches.save')}</Button>\n                </>\n              ) : showForm ? (\n                <>\n                  <Button variant=\"outlined\" onClick={() => setShowForm(false)} sx={{ color: 'rgba(255,255,255,0.7)', borderColor: 'rgba(255,255,255,0.3)' }}>\n                    {t('coaches.cancel')}\n                  </Button>\n                  <Button variant=\"contained\" onClick={handleSendRequest} disabled={isLoading} startIcon={<SendIcon />} sx={{ bgcolor: '#FFD700', color: 'black', '&:hover': { bgcolor: '#FFC107' } }}>\n                    {t('coaches.sendRequest')}\n                  </Button>\n                </>\n              ) : (\n                selectedCoach.email === currentUserEmail && (\n                  <Button variant=\"text\" onClick={() => setIsEditMode(true)} startIcon={<EditIcon />} sx={{ color: '#FFD700' }}>\n                    {t('coaches.editProfile')}\n                  </Button>\n                )\n              )}\n            </DialogActions>\n          </>\n          )}\n        </Dialog>\n      </Container>\n    </Box>\n  );\n};","import axiosInstance from '@/api';\n\ninterface HomeworkPayload {\n  studentId: string;\n  scheduleId: string;\n  homeworkText?: string;\n  screenshot?: File;\n}\n\nexport const sendHomework = async (payload: HomeworkPayload): Promise<void> => {\n  const formData = new FormData();\n  formData.append('studentId', payload.studentId);\n  formData.append('scheduleId', payload.scheduleId);\n  \n  if (payload.homeworkText) {\n    formData.append('homeworkText', payload.homeworkText);\n  }\n  if (payload.screenshot) {\n    formData.append('screenshot', payload.screenshot);\n  }\n\n  await axiosInstance.post('/homework/send', formData);\n};\n","import axiosInstance from '@/api';\n\ninterface ReviewPayload {\n  status: 'approved' | 'rejected';\n  comment: string;\n}\n\nexport const reviewHomework = async (homeworkId: string, payload: ReviewPayload): Promise<any> => {\n  const response = await axiosInstance.put(`/homework/${homeworkId}/review`, payload);\n  return response.data;\n};","import axiosInstance from '@/api';\n\nexport const getHomeworksForReview = async (): Promise<any[]> => {\n  const response = await axiosInstance.get('/homework/coach');\n  return response.data;\n};\n","import axiosInstance from '@/api';\n\nexport const getHomeworkScreenshot = async (homeworkId: string): Promise<Blob> => {\n  const response = await axiosInstance.get(\n    `/homework/${homeworkId}/screenshot`, \n    { responseType: 'blob' } \n  );\n  return response.data;\n};","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Container,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  List,\n  ListItemText,\n  ListItemButton,\n  CircularProgress,\n  Box,\n  TextField,\n  Divider,\n  Tabs,\n  Tab,\n  Link,\n} from '@mui/material';\nimport { notification } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nimport { fetchRequests, handleRequest } from '@/api/requests';\nimport { getHomeworksForReview, reviewHomework, getHomeworkScreenshot } from '@/api/homework';\n\ninterface Request {\n  _id: string;\n  student: { _id: string; firstName: string; lastName: string; email: string; };\n  experience?: string;\n  goals?: string;\n  createdAt: string;\n  status: 'pending' | 'approved' | 'rejected';\n}\n\ninterface Homework {\n  _id: string;\n  student: { _id: string; firstName: string; lastName: string; };\n  schedule: { title: string; };\n  text?: string;\n  hasScreenshot?: boolean;\n  submittedAt: string;\n  status: 'pending' | 'approved' | 'rejected';\n}\n\ntype InboxItem = Request | Homework;\ntype ViewType = 'requests' | 'homework';\n\nconst isRequest = (item: InboxItem): item is Request => 'createdAt' in item;\n\nexport const InboxPage: React.FC = () => {\n  const { t } = useTranslation();\n  const [view, setView] = useState<ViewType>('requests');\n  const [items, setItems] = useState<InboxItem[]>([]);\n  const [selectedItem, setSelectedItem] = useState<InboxItem | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [reviewComment, setReviewComment] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [screenshotUrl, setScreenshotUrl] = useState<string | null>(null);\n  const [isLoadingScreenshot, setIsLoadingScreenshot] = useState(false);\n\n  const fetchData = useCallback(async (currentView: ViewType) => {\n    setIsLoading(true);\n    setSelectedItem(null);\n    try {\n      const data = currentView === 'requests'\n        ? await fetchRequests()\n        : await getHomeworksForReview();\n      setItems(Array.isArray(data) ? data : []);\n    } catch (error) {\n      console.error(`Error loading ${currentView}:`, error); // Console log for developers can remain in English\n      notification.error({\n        message: t('inbox.errors.loadFailed'),\n        description: undefined\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [t]);\n\n  useEffect(() => {\n    fetchData(view);\n  }, [view, fetchData]);\n\n  useEffect(() => {\n    let objectUrl: string | null = null;\n  \n    const fetchScreenshot = async () => {\n      if (!selectedItem || isRequest(selectedItem) || !selectedItem.hasScreenshot) {\n        setScreenshotUrl(null);\n        return;\n      }\n      setIsLoadingScreenshot(true);\n      try {\n        const screenshotBlob = await getHomeworkScreenshot(selectedItem._id);\n        objectUrl = URL.createObjectURL(screenshotBlob);\n        setScreenshotUrl(objectUrl);\n      } catch (error) {\n        console.error(\"Screenshot load error:\", error);\n        notification.error({\n          message: t('inbox.errors.loadScreenshotFailed'),\n          description: undefined\n        });\n      } finally {\n        setIsLoadingScreenshot(false);\n      }\n    };\n  \n    fetchScreenshot();\n    setReviewComment('');\n  \n    // Cleanup function\n    return () => {\n      if (objectUrl) {\n        URL.revokeObjectURL(objectUrl);\n      }\n    };\n  }, [selectedItem, t]);\n  \n  const handleRequestAction = async (action: 'approved' | 'rejected') => {\n    if (!selectedItem || !isRequest(selectedItem)) return;\n    setIsSubmitting(true);\n    try {\n      await handleRequest(selectedItem._id, action);\n      notification.success({\n        message: t('inbox.success.requestHandled', {\n          action: t(action === 'approved' ? 'inbox.success.actions.approved' : 'inbox.success.actions.rejected')\n        }),\n        description: undefined\n      });\n      await fetchData('requests');\n    } catch (error) {\n      console.error('Error handling request:', error);\n      notification.error({\n        message: t('inbox.errors.handleRequestFailed'),\n        description: undefined\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleHomeworkAction = async (action: 'approved' | 'rejected') => {\n    if (!selectedItem || isRequest(selectedItem)) return;\n    setIsSubmitting(true);\n    try {\n      await reviewHomework(selectedItem._id, { status: action, comment: reviewComment });\n      notification.success({\n        message: t('inbox.success.homeworkReviewed'),\n        description: undefined\n      });\n      await fetchData('homework');\n    } catch (error) {\n      console.error('Error reviewing homework:', error);\n      notification.error({\n        message: t('inbox.errors.reviewHomeworkFailed'),\n        description: undefined\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderItemDetails = () => {\n    if (isLoading && !selectedItem) return null;\n    if (!selectedItem) {\n      return <Typography color=\"text.secondary\">{t('inbox.selectItemPrompt')}</Typography>;\n    }\n\n    if (isRequest(selectedItem)) {\n      return (\n        <>\n          <Typography variant=\"h6\">{selectedItem.student.firstName} {selectedItem.student.lastName}</Typography>\n          <Typography>{t('inbox.details.email')}: {selectedItem.student.email}</Typography>\n          <Typography>{t('inbox.details.sent')}: {new Date(selectedItem.createdAt).toLocaleString()}</Typography>\n          <Divider sx={{ my: 2 }} />\n          <Typography><strong>{t('inbox.details.experience')}:</strong> {selectedItem.experience || t('inbox.details.notSpecified')}</Typography>\n          <Typography><strong>{t('inbox.details.goals')}:</strong> {selectedItem.goals || t('inbox.details.notSpecified')}</Typography>\n          <Box mt={3} display=\"flex\" gap={2}>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleRequestAction('approved')} disabled={isSubmitting || selectedItem.status !== 'pending'}>\n              {t('inbox.actions.approve')}\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => handleRequestAction('rejected')} disabled={isSubmitting || selectedItem.status !== 'pending'}>\n              {t('inbox.actions.reject')}\n            </Button>\n          </Box>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Typography variant=\"h5\" gutterBottom>{selectedItem.schedule?.title || t('inbox.list.untitled')}</Typography>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\n            {t('inbox.details.student')}: {selectedItem.student.firstName} {selectedItem.student.lastName}\n          </Typography>\n          <Divider sx={{ my: 2 }} />\n          {selectedItem.text && (\n            <Box mb={2}>\n              <Typography variant=\"h6\">{t('inbox.details.responseText')}:</Typography>\n              <Typography sx={{ whiteSpace: 'pre-wrap', p: 1, bgcolor: 'action.hover', borderRadius: 1 }}>{selectedItem.text}</Typography>\n            </Box>\n          )}\n          \n          {selectedItem.hasScreenshot && (\n            <Box mb={2}>\n              <Typography variant=\"h6\">{t('inbox.details.screenshot')}:</Typography>\n              {isLoadingScreenshot && <Box sx={{display: 'flex', alignItems: 'center', my: 2}}><CircularProgress size={24} sx={{mr: 2}} /> {t('inbox.loading')}</Box>}\n              {screenshotUrl && !isLoadingScreenshot && (\n                <Link href={screenshotUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img \n                    src={screenshotUrl} \n                    alt={t('inbox.details.screenshotAlt')}\n                    style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', border: '1px solid #ddd', display: 'block', cursor: 'pointer' }} \n                  />\n                </Link>\n              )}\n            </Box>\n          )}\n          \n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\">{t('inbox.details.feedback')}:</Typography>\n          <TextField \n            fullWidth \n            multiline \n            rows={4} \n            label={t('inbox.details.commentLabel')}\n            value={reviewComment} \n            onChange={(e) => setReviewComment(e.target.value)} \n            margin=\"normal\" \n            disabled={isSubmitting}\n          />\n          <Box mt={2} display=\"flex\" gap={2}>\n            <Button variant=\"contained\" color=\"success\" onClick={() => handleHomeworkAction('approved')} disabled={isSubmitting}>\n              {t('inbox.actions.approve')}\n            </Button>\n            <Button variant=\"contained\" color=\"error\" onClick={() => handleHomeworkAction('rejected')} disabled={isSubmitting}>\n              {t('inbox.actions.sendForRevision')}\n            </Button>\n          </Box>\n        </>\n      );\n    }\n  };\n\n  return (\n    <Container sx={{ py: 4 }}>\n      <Typography variant=\"h4\" gutterBottom>{t('inbox.title')}</Typography>\n\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n        <Tabs value={view} onChange={(_e, newValue) => setView(newValue)} aria-label=\"inbox tabs\">\n          <Tab label={t('inbox.tabs.requests')} value=\"requests\" />\n          <Tab label={t('inbox.tabs.homework')} value=\"homework\" />\n        </Tabs>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Paper style={{ maxHeight: '80vh', overflow: 'auto' }}>\n            {isLoading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}><CircularProgress /></Box>\n            ) : (\n              <List component=\"nav\">\n                {items.length > 0 ? items.map((item) => (\n                  <ListItemButton key={item._id} selected={selectedItem?._id === item._id} onClick={() => setSelectedItem(item)}>\n                    <ListItemText\n                      primaryTypographyProps={{ style: { fontWeight: selectedItem?._id === item._id ? 'bold' : 'normal' } }}\nprimary={\n    item.student \n    ? `${item.student.firstName} ${item.student.lastName}`\n    : t('inbox.unknownStudent', 'Unknown Student')\n}                     \nsecondary={\n  isRequest(item) \n    ? t('inbox.list.requestSecondary', { date: new Date(item.createdAt).toLocaleDateString() }) \n    : t('inbox.list.homeworkSecondary', { title: item.schedule?.title || t('inbox.list.untitled', 'Без темы') })\n}\n                    />\n                  </ListItemButton>\n                )) : <Typography sx={{ p: 2, textAlign: 'center' }}>{t('inbox.empty')}</Typography>}\n              </List>\n            )}\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Paper style={{ padding: 24, minHeight: '50vh', display: 'flex', flexDirection: 'column' }}>\n            {renderItemDetails()}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};","// Файл: components/StudentSchedule/StudentsSchedule.tsx\n\nimport React, { useMemo } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { Paper, Tooltip, Typography } from '@mui/material';\n\n// Иконки\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\n\n// Типы\nimport { ScheduleEvent } from '@/types/SheduleEvent';\n\n// Стили\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './styles.scss';\n\n// --- НАСТРОЙКИ И УТИЛИТЫ ---\nconst localizer = momentLocalizer(moment);\n\nconst eventTypeIcons = {\n  individual_lesson: <EventNoteIcon fontSize=\"small\" />,\n  group_lesson: <PeopleIcon fontSize=\"small\" />,\n  homework: <AssignmentIcon fontSize=\"small\" />,\n  opening_study: <MenuBookIcon fontSize=\"small\" />,\n  tournament_participation: <EmojiEventsIcon fontSize=\"small\" />,\n};\n\n// --- КОМПОНЕНТЫ ДЛЯ КАЛЕНДАРЯ ---\n\n// Наш кастомный компонент для события в календаре\nconst CustomEvent: React.FC<{ event: ScheduleEvent & { start?: Date; end?: Date; } }> = ({ event }) => {\n  const icon = eventTypeIcons[event.type as keyof typeof eventTypeIcons];\n  const className = `custom-event rbc-event--${event.type}`;\n  return (\n    <Tooltip title={event.description || event.title} placement=\"top\">\n      <div className={className}>\n        {icon}\n        <Typography variant=\"caption\" noWrap component=\"span\">{event.title}</Typography>\n      </div>\n    </Tooltip>\n  );\n};\n\n// --- ОСНОВНОЙ КОМПОНЕНТ КАЛЕНДАРЯ ---\n\n// Определяем, какие пропсы будет принимать наш компонент\ninterface StudentScheduleProps {\n  events: ScheduleEvent[]; // Массив событий для отображения\n  onSelectEvent: (event: ScheduleEvent) => void; // Функция, которая вызовется при клике на событие\n}\n\nconst StudentSchedule: React.FC<StudentScheduleProps> = ({ events, onSelectEvent }) => {\n\n  // Преобразуем входящие события в формат, который понимает react-big-calendar\n  const calendarEvents = useMemo(() => {\n    return events.map(event => ({\n      ...event, // Копируем все поля из нашего оригинального события\n      start: new Date(event.date),\n      end: moment(event.date).add(1, 'hour').toDate(), // Длительность 1 час для примера\n    }));\n  }, [events]); // Этот хук будет перезапускаться только если изменится пропс events\n\n  return (\n    <Paper className=\"schedule-paper\" style={{ height: '70vh', padding: '16px' }}>\n        <Calendar\n          localizer={localizer}\n          events={calendarEvents} // <-- Используем преобразованные события\n          startAccessor=\"start\"\n          endAccessor=\"end\"\n          views={['month', 'week', 'day', 'agenda']}\n          components={{ event: CustomEvent as any }}\n          onSelectEvent={onSelectEvent} // <-- Привязываем обработчик клика\n          className=\"schedule-calendar-standalone\"\n        />\n    </Paper>\n  );\n};\n\nexport default StudentSchedule;","import React, { useEffect, useState, useMemo } from 'react';\nimport {\n  Container, Typography, Paper, Button, Dialog, DialogTitle,\n  DialogContent, DialogActions, TextField, CircularProgress, Box, Chip, Link as MuiLink,\n  ToggleButton, ToggleButtonGroup\n} from '@mui/material';\nimport moment from 'moment';\nimport { notification } from 'antd';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\n// Icons\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport HourglassEmptyIcon from '@mui/icons-material/HourglassEmpty';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport BackupIcon from '@mui/icons-material/Backup';\n\n// API & Types\nimport { getScheduleByStudent } from '@/api/schedule';\nimport { sendHomework } from '@/api/homework';\nimport { createNotification } from '@/api/notifications';\nimport { ScheduleEvent } from '@/types/SheduleEvent';\n\n// Импортируем готовый компонент календаря\nimport StudentSchedule from '@/components/StudentSchedule/StudentsSchedule';\n\n// Styles\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './styles.scss';\n\n// --- КОНСТАНТЫ И УТИЛИТЫ ---\nconst MAX_FILE_SIZE_MB = 5;\n\nconst statusStyles = {\n  scheduled: { icon: <HourglassEmptyIcon fontSize=\"small\" />, color: 'info', labelKey: 'status.scheduled' },\n  pending: { icon: <HourglassEmptyIcon fontSize=\"small\" />, color: 'warning', labelKey: 'status.pending' },\n  completed: { icon: <CheckCircleOutlineIcon fontSize=\"small\" />, color: 'success', labelKey: 'status.completed' },\n  approved: { icon: <CheckCircleOutlineIcon fontSize=\"small\" />, color: 'success', labelKey: 'status.approved' },\n  rejected: { icon: <HighlightOffIcon fontSize=\"small\" />, color: 'error', labelKey: 'status.rejected' },\n};\nconst STATUS_KEYS = Object.keys(statusStyles);\n\n// --- === ДОЧЕРНИЕ КОМПОНЕНТЫ === ---\n\n// --- 1. Карточка События ---\nconst EventCard: React.FC<{ event: ScheduleEvent; onSelect: (event: ScheduleEvent) => void; t: TFunction; }> = ({ event, onSelect, t }) => {\n  const statusKey = event.status as keyof typeof statusStyles;\n  const style = statusStyles[statusKey] || statusStyles.scheduled;\n  return (\n    <Paper className={`event-card event-card--${style.color}`} onClick={() => onSelect(event)}>\n      <Box className=\"event-card__header\">\n        <Typography variant=\"h6\" className=\"event-card__title\">{event.title}</Typography>\n        <Chip icon={style.icon} label={t(style.labelKey)} color={style.color as any} size=\"small\"/>\n      </Box>\n      <Typography variant=\"body2\" className=\"event-card__date\">{moment(event.date).format('MMMM Do, YYYY [at] HH:mm')}</Typography>\n      {event.description && <Typography variant=\"body2\" className=\"event-card__description\">{event.description}</Typography>}\n    </Paper>\n  );\n};\n\n// --- 2. Список Событий ---\nconst EventList: React.FC<{ events: ScheduleEvent[]; onSelectEvent: (event: ScheduleEvent) => void; t: TFunction; }> = ({ events, onSelectEvent, t }) => (\n  <Box className=\"event-list\">\n    {events.length === 0 ? (\n      <Paper className=\"event-list__empty\"><Typography>{t('studentSchedule.noEventsForDay')}</Typography></Paper>\n    ) : (\n      events.map(event => <EventCard key={event._id} event={event} onSelect={onSelectEvent} t={t} />)\n    )}\n  </Box>\n);\n\n// --- 3. Панель Фильтров ---\nconst EventListControls: React.FC<{ statusFilters: string[]; onFilterChange: (filters: string[]) => void; t: TFunction; }> = ({ statusFilters, onFilterChange, t }) => {\n  const handleFilterChange = (_event: React.MouseEvent<HTMLElement>, newFilters: string[]) => onFilterChange(newFilters);\n  return (\n    <Paper className=\"event-controls\">\n        <Typography variant=\"button\" className=\"event-controls__label\">{t('common.filterByStatus')}:</Typography>\n        <ToggleButtonGroup value={statusFilters} onChange={handleFilterChange} size=\"small\">\n          {STATUS_KEYS.map(key => (<ToggleButton key={key} value={key} className=\"filter-toggle-button\">{t(statusStyles[key as keyof typeof statusStyles].labelKey)}</ToggleButton>))}\n        </ToggleButtonGroup>\n    </Paper>\n  );\n};\n\n// --- 4. Модальное окно ДЗ ---\nconst HomeworkDialog: React.FC<{\n  event: ScheduleEvent | null; open: boolean; onClose: () => void;\n  onSendHomework: (text: string, file: File | null) => Promise<void>; t: TFunction;\n}> = ({ event, open, onClose, onSendHomework, t }) => {\n  const [homeworkText, setHomeworkText] = useState('');\n  const [screenshot, setScreenshot] = useState<File | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (!open) {\n      setHomeworkText('');\n      setScreenshot(null);\n      setIsSubmitting(false);\n    }\n  }, [open]);\n\n  if (!event) return null;\n\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      if (file.size > MAX_FILE_SIZE_MB * 1024 * 1024) {\n        notification.error({\n          message: t('errors.fileTooLarge', { size: MAX_FILE_SIZE_MB }),\n          description: undefined\n        });\n        return;\n      }\n      setScreenshot(file);\n    }\n  };\n\n  const handleSendClick = async () => {\n    if (!homeworkText.trim() && !screenshot) {\n      notification.error({\n        message: t('errors.emptyHomework'),\n        description: undefined\n      });\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      await onSendHomework(homeworkText, screenshot);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const statusKey = event.status as keyof typeof statusStyles;\n  const style = statusStyles[statusKey] || statusStyles.scheduled;\n\n  return (\n    <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\" className=\"details-dialog\">\n      <DialogTitle className={`details-dialog__header details-dialog__header--${style.color}`}>{t('studentSchedule.eventDetails')}</DialogTitle>\n      <DialogContent className=\"details-dialog__content\">\n        <Box className=\"details-dialog__info\">\n          <Typography variant=\"h6\" className=\"details-dialog__title\">{event.title}</Typography>\n          <Chip icon={style.icon} label={t(style.labelKey)} color={style.color as any} size=\"small\"/>\n        </Box>\n        <Typography variant=\"body2\">{moment(event.date).format('dddd, MMMM Do, YYYY [at] HH:mm')}</Typography>\n        {event.description && <Typography variant=\"body1\" sx={{ mt: 2 }}>{event.description}</Typography>}\n        {event.link && <Typography variant=\"body2\" sx={{ mt: 1 }}>{t('studentSchedule.form_link')}: <MuiLink href={event.link} target=\"_blank\" rel=\"noopener noreferrer\">{event.link}</MuiLink></Typography>}\n        {event.type === 'homework' && (\n          <Box className=\"homework-form\">\n            <Typography variant=\"h6\" className=\"homework-form__title\">{t('studentSchedule.sendHomeworkTitle')}</Typography>\n            <TextField label={t('studentSchedule.form_description')} fullWidth multiline rows={4} value={homeworkText} onChange={(e) => setHomeworkText(e.target.value)} variant=\"filled\" disabled={isSubmitting} />\n            <Button variant=\"outlined\" component=\"label\" startIcon={<BackupIcon />} disabled={isSubmitting}>\n              {screenshot ? screenshot.name : t('studentSchedule.uploadScreenshot')}\n              <input type=\"file\" hidden accept=\"image/*\" onChange={handleFileUpload} />\n            </Button>\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions className=\"details-dialog__actions\">\n        <Button onClick={onClose} disabled={isSubmitting}>{t('common.close')}</Button>\n        {event.type === 'homework' && <Button onClick={handleSendClick} variant=\"contained\" color=\"primary\" disabled={isSubmitting}>{t('studentSchedule.send')}</Button>}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\n// --- === ГЛАВНЫЙ КОМПОНЕНТ СТРАНИЦЫ === ---\nconst StudentSchedulePage: React.FC = () => {\n  const { t } = useTranslation();\n  const [allEvents, setAllEvents] = useState<ScheduleEvent[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedEventForDialog, setSelectedEventForDialog] = useState<ScheduleEvent | null>(null);\n  const [statusFilters, setStatusFilters] = useState<string[]>([]);\n\n  // Переносим логику получения ID и загрузку данных в один useEffect.\n  useEffect(() => {\n    const fetchScheduleForStudent = async () => {\n      const userStr = localStorage.getItem('user');\n      let studentId = null;\n      try {\n        if (userStr && userStr !== 'undefined' && userStr !== 'null') {\n            studentId = JSON.parse(userStr)._id;\n        }\n      } catch (error) {\n        console.error(\"Ошибка парсинга пользователя из localStorage:\", error);\n      }\n      \n      if (!studentId) {\n        setLoading(false);\n        notification.error({\n          message: t('errors.userNotFound'),\n          description: undefined\n        });\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        const scheduleData = await getScheduleByStudent(studentId);\n        setAllEvents(scheduleData);\n      } catch (error) {\n        console.error('Ошибка при загрузке расписания:', error);\n        notification.error({\n          message: t('errors.fetchSchedule'),\n          description: undefined\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchScheduleForStudent();\n  }, [t]); // Зависимость от 't' нужна для доступа к переводам в notification.\n\n  const handleOpenDialog = (event: ScheduleEvent) => setSelectedEventForDialog(event);\n  const handleCloseDialog = () => setSelectedEventForDialog(null);\n  \n  const handleSendHomework = async (homeworkText: string, screenshot: File | null) => {\n    // Получаем ID студента снова, чтобы не хранить его в состоянии\n    const userStr = localStorage.getItem('user');\n    const studentId = userStr ? JSON.parse(userStr)._id : null;\n    if (!studentId || !selectedEventForDialog) return;\n\n    try {\n      await sendHomework({\n        studentId,\n        scheduleId: selectedEventForDialog._id,\n        homeworkText: homeworkText.trim() ? homeworkText : undefined,\n        screenshot: screenshot || undefined,\n      });\n\n      if (selectedEventForDialog.coach) {\n        await createNotification({\n            recipient: selectedEventForDialog.coach,\n            type: 'homework_submission',\n            content: `Ученик отправил домашнее задание по теме: \"${selectedEventForDialog.title}\"`,\n            metadata: { scheduleId: selectedEventForDialog._id },\n        });\n      }\n      notification.success({\n        message: t('studentSchedule.homeworkSentSuccess'),\n        description: undefined\n      });\n      handleCloseDialog();\n      // Чтобы не делать еще один запрос к API, можно обновить состояние локально.\n      // Это быстрее для пользователя.\n      setAllEvents(prevEvents => \n        prevEvents.map(event => \n          event._id === selectedEventForDialog._id ? { ...event, status: 'pending' } : event\n        )\n      );\n    } catch (error) {\n      console.error('Ошибка при отправке ДЗ:', error);\n      notification.error({\n        message: t('errors.sendHomework'),\n        description: undefined\n      });\n    }\n  };\n\n  const filteredEvents = useMemo(() => {\n    let events = [...allEvents];\n    if (statusFilters.length > 0) {\n      events = events.filter(event => statusFilters.includes(event.status));\n    }\n    return events.sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n  }, [allEvents, statusFilters]);\n\n  return (\n    <Box className=\"student-schedule-v2-page\">\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\" component=\"h1\" className=\"page-title\">{t('studentSchedule.myScheduleTitle')}</Typography>\n\n        {/* Передаем отфильтрованные данные и обработчик в дочерний компонент календаря */}\n        <StudentSchedule \n          events={filteredEvents} \n          onSelectEvent={handleOpenDialog} \n        />\n\n        <Box className=\"list-controls-container\">\n            <Typography variant=\"h5\" component=\"h2\">{t('studentSchedule.eventListTitle')}</Typography>\n            <EventListControls \n                statusFilters={statusFilters}\n                onFilterChange={setStatusFilters}\n                t={t}\n            />\n        </Box>\n        \n        {loading ? ( <Box className=\"loader-container\"><CircularProgress className=\"loader\" /></Box> ) \n                 : ( <EventList events={filteredEvents} onSelectEvent={handleOpenDialog} t={t} /> )}\n      </Container>\n      \n      <HomeworkDialog\n        event={selectedEventForDialog} open={!!selectedEventForDialog}\n        onClose={handleCloseDialog} onSendHomework={handleSendHomework}\n        t={t}\n      />\n    </Box>\n  );\n};\n\nexport default StudentSchedulePage;","import { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { AuthPage } from '@/pages/auth-page';\nimport { Navbar } from '@/components/Navbar/Navbar';\nimport { Home } from '@/pages/home-page/home-page';\nimport { About } from '@/pages/about-page/about-page';\nimport { Achievements } from '@/pages/achievements-page/achievements-page';\nimport PrivateRoute from '@/components/PrivateRoute/PrivateRoute';\nimport { ProfilePage } from '@/pages/profile-page/profile-page';\nimport { UsersPage } from '@/pages/users-page/users-page';\nimport { StudentsPage } from '@/pages/students-page/students-page';\nimport { AnalysisPage } from '@/features/Chess/pages/AnalysisPage';\n// import AnalysisPage from '@/pages/analisys-page/analisys-page';\n// import ChallengesPage from '@/pages/challenges-page/challenges-page';\nimport PuzzleEditor from './components/PuzzleEditor/PuzzleEditor';\nimport { VerifyEmailPage } from './pages/verify-email-page/verify-email-page';\nimport { CoachesPage } from './pages/coaches-page/coaches-page';\nimport { InboxPage } from './pages/inbox-page/inbox-page';\n// import { Footer } from './components/Footer/Footer';\nimport StudentSchedulePage from './pages/students-shedule-page/students-shedule-page';\nimport { CssBaseline } from '@mui/material';\n\n\nfunction MainLayout() {\n  const location = useLocation();\n  const hideNavbar = location.pathname === '/login' || location.pathname === '/register';\n\n  return (\n    <>\n    <CssBaseline /> \n      {!hideNavbar && <Navbar />}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/achievements\" element={<Achievements />} />\n        <Route path=\"/login\" element={<AuthPage />} />\n        <Route path=\"/register\" element={<AuthPage />} />\n        {/* <Route path=\"/chess\" element={<ChessGame></ChessGame>} /> */}\n        <Route path=\"/analysis\" element={<AnalysisPage />} />\n        {/* <Route path=\"/chess\" element={<ChessProvider><GamePage /></ChessProvider>} /> */}\n        {/* <Route path=\"/challenges\" element={<ChallengesPage/>}/> */}\n        <Route path=\"/verify-email\" element={<VerifyEmailPage />} />\n        <Route path=\"/coaches\" element={<CoachesPage />} />\n\n        <Route element={<PrivateRoute />}>\n          <Route path=\"/editor\" element={<PuzzleEditor />} />\n          <Route path=\"/profile\" element={<ProfilePage />} />\n          <Route path=\"/users\" element={<UsersPage />} />\n          <Route path=\"/students-shedule\" element={<StudentSchedulePage />} />\n          <Route path=\"/students\" element={<StudentsPage />} />\n          <Route path=\"/puzzle-editor\" element={<PuzzleEditor />} />\n          <Route path=\"/inbox\" element={<InboxPage />} />\n        </Route>\n      </Routes>\n      {/* {!hideNavbar && <Footer />} */}\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <MainLayout />\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { ThemeProvider } from '@/shared/theme/ThemeProvider';\nimport '@/styles'; \nimport './index.css'\nimport './i18n'; \nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n     <ThemeProvider> \n    <App />\n    </ThemeProvider>\n  </StrictMode>,\n)\n"],"names":["useThemeStore","create","set","state","newTheme","ThemeContext","createContext","ThemeProvider","children","theme","toggleTheme","useEffect","jsx","i18n","HttpBackend","initReactI18next","API_URL","axiosInstance","axios","reduceMessage","arr","acc","item","getIssueMessage","error","description","notification","config","token","language","response","_a","_c","_b","_d","data","_e","message","key","loginUser","credentials","registerUser","nameValidation","t","_","value","loginValidation","passwordValidation","AuthForm","mode","useTranslation","navigate","useNavigate","isLoginMode","handleLogin","values","user","handleRegister","registeredEmail","jsxs","FaChessKing","Typography","Form","Fragment","Input","Button","AuthPage","useLocation","LanguageSwitcher","className","handleChange","event","selectedLanguage","Select","MenuItem","createNotification","getNotifications","markAsRead","notificationId","deleteNotification","Notifications","navigateToRequests","notifications","setNotifications","useState","anchorEl","setAnchorEl","open","unreadCount","n","fetchNotifications","interval","handleMenuOpen","handleMenuClose","handleDeleteNotification","prev","handleNotificationClick","handleViewAllClick","IconButton","Badge","NotificationsIcon","Menu","Box","ListItemText","ListItemSecondaryAction","MuiIconButton","DeleteIcon","Divider","Navbar","isDrawerOpen","setIsDrawerOpen","userString","isAuthenticated","isAdmin","isCoach","isStudent","handleLogout","handleGetStarted","toggleDrawer","handleMenuClick","path","AppBar","Toolbar","MenuIcon","Drawer","CloseOutlined","List","ListItemButton","ListItemIcon","HomeOutlined","InfoCircleOutlined","TrophyOutlined","TeamOutlined","PlayCircleOutlined","UserOutlined","LogoutOutlined","RocketOutlined","getCoaches","getCoachesByEmail","emails","getStudentDetails","coachEmail","studentId","getStudentIdsByCoach","removeStudentFromCoach","CoachesBlock","coaches","setCoaches","Grid","coach","Card","CardMedia","CardContent","i","StarIcon","Home","currentYear","whyChessItems","howItWorksSteps","formatItems","SchoolIcon","GroupIcon","Container","icon","descKey","Paper","num","titleKey","type","buttonKey","About","phrases","useMemo","testimonials","whyUsCards","missionPoints","currentPhraseIndex","setCurrentPhraseIndex","currentTestimonialIndex","setCurrentTestimonialIndex","phraseInterval","testimonialInterval","SwitchTransition","CSSTransition","Stack","TrackChangesIcon","point","CheckCircleOutlineIcon","card","idx","Achievements","PrivateRoute","Outlet","Navigate","getProfile","updateProfile","formData","getAvatarUrl","userId","baseURL","getPlayerStats","EditProfileForm","onClose","firstName","setFirstName","lastName","setLastName","email","setEmail","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","selectedFile","setSelectedFile","avatarPreview","setAvatarPreview","handleFileChange","e","file","handleSubmit","Dialog","DialogTitle","DialogContent","Avatar","TextField","Link","DialogActions","statIcons","WhatshotIcon","BoltIcon","TimerIcon","StyleIcon","ProfilePage","setUser","playerStats","setPlayerStats","isLoading","setIsLoading","setError","isEditing","setIsEditing","profile","stats","CircularProgress","EditIcon","LogoutIcon","CustomTable","columns","search","setSearch","rowsPerPage","setRowsPerPage","page","setPage","handleSearch","handleChangePage","_event","newPage","handleChangeRowsPerPage","filteredData","row","column","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","UsersPage","users","setUsers","selectedUser","setSelectedUser","newRole","setNewRole","actionType","setActionType","setOpen","confirmDeleteOpen","setConfirmDeleteOpen","snackbar","setSnackbar","mappedUsers","handleOpen","handleClose","handleConfirmDeleteOpen","handleConfirmDeleteClose","handleRoleChange","role","handleDeleteUser","Edit","Delete","DialogContentText","FormControl","InputLabel","Snackbar","Alert","getScheduleByStudent","createScheduleEvent","payload","updateScheduleEvent","eventId","deleteScheduleEvent","localizer","momentLocalizer","moment","eventTypeIcons","EventNoteIcon","PeopleIcon","AssignmentIcon","MenuBookIcon","EmojiEventsIcon","eventTypes","CustomEvent","eventType","Tooltip","EditScheduleModal","student","events","setEvents","selectedEvent","setSelectedEvent","selectedDate","setSelectedDate","studentName","resetForm","useCallback","fetchSchedule","studentSchedule","handleSaveEvent","date","title","isUpdating","handleDeleteEvent","handleSelectSlot","start","handleSelectEvent","calendarEvents","dayPropGetter","handleFormInputChange","name","handleTypeChange","CloseIcon","Calendar","SaveIcon","AddCircleOutlineIcon","StudentsPage","students","setStudents","selectedStudent","setSelectedStudent","openModal","setOpenModal","userStr","fetchStudents","studentIds","studentDetailsPromises","id","studentDetails","handleRemoveStudent","prevStudents","s","handleEditSchedule","ChessGameEngine","fen","__publicField","Chess","square","source","target","move","pgn","moveIndex","tempGame","uci","useChessGame","initialFen","engine","setFen","history","setHistory","currentMoveIndex","setCurrentMoveIndex","selectedSquare","setSelectedSquare","moveOptions","setMoveOptions","fenRef","useRef","updateGameState","newHistory","clearHighlights","handleMove","sourceSquare","targetSquare","onSquareClick","moves","newOptions","resetGame","loadPgn","success","goToMove","ChessBoard","onPieceDrop","squareStyles","Chessboard","getEvaluationSymbol","evaluation","evalAbs","getSymbolColor","MoveHistory","onMoveClick","movePairs","React","pairs","pair","index","whiteMoveIndex","blackMoveIndex","AnalysisPanel","depth","principalVariation","isAnalyzing","isEngineOn","onToggleEngine","FormControlLabel","Switch","AnalysisPage","actions","annotatedHistory","setAnnotatedHistory","inputPgn","setInputPgn","engineWorker","setEngineWorker","isLiveAnalyzing","setIsLiveAnalyzing","liveEvaluation","setLiveEvaluation","liveDepth","setLiveDepth","livePV","setLivePV","setIsEngineOn","san","resetAnalysisData","handleLoadPgn","handleResetGame","handleGoToMove","liveAnalyzePosition","handleToggleEngine","formatUCIToSAN","uciLine","startFen","sanLine","moveResult","worker","depthMatch","scoreMatch","pvMatch","turn","evalString","formattedPV","SkipPreviousIcon","ArrowLeftIcon","ArrowRightIcon","SkipNextIcon","ReplayIcon","UploadFileIcon","position","onMove","boardWidth","PuzzleEditor","defaultFen","isCursorOnBoard","setIsCursorOnBoard","chess","instance","draggedPiece","setDraggedPiece","cursorStyle","setCursorStyle","pieces","boardRef","handleMouseMove","rect","x","y","updateCastlingRights","_rights","checked","flag","parts","castling","updatedFen","handleSquareClick","rank","existingPiece","clearBoard","setInitialPosition","removeDraggedPiece","savePosition","char","piece","FormGroup","Checkbox","RadioGroup","newFen","Radio","checkVerificationStatus","resendVerificationEmail","VerifyEmailPage","location","isPolling","setIsPolling","successMessage","setSuccessMessage","errorMessage","setErrorMessage","resendDisabled","setResendDisabled","intervalIdRef","emailVerified","handleResendEmail","fetchRequests","handleRequest","requestId","status","createRequest","coachId","experience","goals","formInputStyles","CoachesPage","selectedCoach","setSelectedCoach","filter","setFilter","isDialogOpen","setIsDialogOpen","showForm","setShowForm","isEditMode","setIsEditMode","currentUserEmail","formValues","setFormValues","editProfile","setEditProfile","handleOpenDialog","_f","handleCloseDialog","handleSendRequest","handleSaveEdit","filteredCoaches","c","coachName","InputAdornment","SearchIcon","WorkHistoryIcon","AttachMoneyIcon","Chip","SendIcon","sendHomework","reviewHomework","homeworkId","getHomeworksForReview","getHomeworkScreenshot","isRequest","InboxPage","view","setView","items","setItems","selectedItem","setSelectedItem","reviewComment","setReviewComment","isSubmitting","setIsSubmitting","screenshotUrl","setScreenshotUrl","isLoadingScreenshot","setIsLoadingScreenshot","fetchData","currentView","objectUrl","screenshotBlob","handleRequestAction","action","handleHomeworkAction","renderItemDetails","Tabs","newValue","Tab","StudentSchedule","onSelectEvent","MAX_FILE_SIZE_MB","statusStyles","HourglassEmptyIcon","HighlightOffIcon","STATUS_KEYS","EventCard","onSelect","statusKey","style","EventList","EventListControls","statusFilters","onFilterChange","handleFilterChange","newFilters","ToggleButtonGroup","ToggleButton","HomeworkDialog","onSendHomework","homeworkText","setHomeworkText","screenshot","setScreenshot","handleFileUpload","handleSendClick","MuiLink","BackupIcon","StudentSchedulePage","allEvents","setAllEvents","loading","setLoading","selectedEventForDialog","setSelectedEventForDialog","setStatusFilters","scheduleData","handleSendHomework","prevEvents","filteredEvents","a","b","MainLayout","hideNavbar","CssBaseline","Routes","Route","App","Router","Suspense","createRoot","StrictMode"],"mappings":"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"}